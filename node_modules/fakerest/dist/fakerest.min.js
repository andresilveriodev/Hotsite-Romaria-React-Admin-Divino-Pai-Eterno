var Gt = Object.defineProperty;
var Kt = (t, e, r) => e in t ? Gt(t, e, { enumerable: !0, configurable: !0, writable: !0, value: r }) : t[e] = r;
var p = (t, e, r) => (Kt(t, typeof e != "symbol" ? e + "" : e, r), r);
var B = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function lt(t) {
  return t && t.__esModule && Object.prototype.hasOwnProperty.call(t, "default") ? t.default : t;
}
var Ht = Array.isArray, O = Ht, qt = typeof B == "object" && B && B.Object === Object && B, ut = qt, zt = ut, Vt = typeof self == "object" && self && self.Object === Object && self, Jt = zt || Vt || Function("return this")(), A = Jt, Qt = A, Wt = Qt.Symbol, R = Wt, Ae = R, ft = Object.prototype, Xt = ft.hasOwnProperty, Yt = ft.toString, M = Ae ? Ae.toStringTag : void 0;
function Zt(t) {
  var e = Xt.call(t, M), r = t[M];
  try {
    t[M] = void 0;
    var a = !0;
  } catch {
  }
  var n = Yt.call(t);
  return a && (e ? t[M] = r : delete t[M]), n;
}
var kt = Zt, er = Object.prototype, tr = er.toString;
function rr(t) {
  return tr.call(t);
}
var ar = rr, we = R, nr = kt, sr = ar, ir = "[object Null]", or = "[object Undefined]", Te = we ? we.toStringTag : void 0;
function cr(t) {
  return t == null ? t === void 0 ? or : ir : Te && Te in Object(t) ? nr(t) : sr(t);
}
var L = cr;
function lr(t) {
  return t != null && typeof t == "object";
}
var C = lr, ur = L, fr = C, dr = "[object Symbol]";
function hr(t) {
  return typeof t == "symbol" || fr(t) && ur(t) == dr;
}
var oe = hr, gr = O, pr = oe, yr = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, br = /^\w*$/;
function vr(t, e) {
  if (gr(t))
    return !1;
  var r = typeof t;
  return r == "number" || r == "symbol" || r == "boolean" || t == null || pr(t) ? !0 : br.test(t) || !yr.test(t) || e != null && t in Object(e);
}
var $r = vr;
function _r(t) {
  var e = typeof t;
  return t != null && (e == "object" || e == "function");
}
var j = _r, mr = L, Ar = j, wr = "[object AsyncFunction]", Tr = "[object Function]", Or = "[object GeneratorFunction]", Cr = "[object Proxy]";
function Sr(t) {
  if (!Ar(t))
    return !1;
  var e = mr(t);
  return e == Tr || e == Or || e == wr || e == Cr;
}
var dt = Sr, jr = A, Er = jr["__core-js_shared__"], Ir = Er, k = Ir, Oe = function() {
  var t = /[^.]+$/.exec(k && k.keys && k.keys.IE_PROTO || "");
  return t ? "Symbol(src)_1." + t : "";
}();
function Pr(t) {
  return !!Oe && Oe in t;
}
var xr = Pr, Nr = Function.prototype, Mr = Nr.toString;
function Rr(t) {
  if (t != null) {
    try {
      return Mr.call(t);
    } catch {
    }
    try {
      return t + "";
    } catch {
    }
  }
  return "";
}
var ht = Rr, Lr = dt, Dr = xr, Fr = j, Br = ht, Ur = /[\\^$.*+?()[\]{}|]/g, Gr = /^\[object .+?Constructor\]$/, Kr = Function.prototype, Hr = Object.prototype, qr = Kr.toString, zr = Hr.hasOwnProperty, Vr = RegExp(
  "^" + qr.call(zr).replace(Ur, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
);
function Jr(t) {
  if (!Fr(t) || Dr(t))
    return !1;
  var e = Lr(t) ? Vr : Gr;
  return e.test(Br(t));
}
var Qr = Jr;
function Wr(t, e) {
  return t == null ? void 0 : t[e];
}
var Xr = Wr, Yr = Qr, Zr = Xr;
function kr(t, e) {
  var r = Zr(t, e);
  return Yr(r) ? r : void 0;
}
var S = kr, ea = S, ta = ea(Object, "create"), V = ta, Ce = V;
function ra() {
  this.__data__ = Ce ? Ce(null) : {}, this.size = 0;
}
var aa = ra;
function na(t) {
  var e = this.has(t) && delete this.__data__[t];
  return this.size -= e ? 1 : 0, e;
}
var sa = na, ia = V, oa = "__lodash_hash_undefined__", ca = Object.prototype, la = ca.hasOwnProperty;
function ua(t) {
  var e = this.__data__;
  if (ia) {
    var r = e[t];
    return r === oa ? void 0 : r;
  }
  return la.call(e, t) ? e[t] : void 0;
}
var fa = ua, da = V, ha = Object.prototype, ga = ha.hasOwnProperty;
function pa(t) {
  var e = this.__data__;
  return da ? e[t] !== void 0 : ga.call(e, t);
}
var ya = pa, ba = V, va = "__lodash_hash_undefined__";
function $a(t, e) {
  var r = this.__data__;
  return this.size += this.has(t) ? 0 : 1, r[t] = ba && e === void 0 ? va : e, this;
}
var _a = $a, ma = aa, Aa = sa, wa = fa, Ta = ya, Oa = _a;
function E(t) {
  var e = -1, r = t == null ? 0 : t.length;
  for (this.clear(); ++e < r; ) {
    var a = t[e];
    this.set(a[0], a[1]);
  }
}
E.prototype.clear = ma;
E.prototype.delete = Aa;
E.prototype.get = wa;
E.prototype.has = Ta;
E.prototype.set = Oa;
var Ca = E;
function Sa() {
  this.__data__ = [], this.size = 0;
}
var ja = Sa;
function Ea(t, e) {
  return t === e || t !== t && e !== e;
}
var ce = Ea, Ia = ce;
function Pa(t, e) {
  for (var r = t.length; r--; )
    if (Ia(t[r][0], e))
      return r;
  return -1;
}
var J = Pa, xa = J, Na = Array.prototype, Ma = Na.splice;
function Ra(t) {
  var e = this.__data__, r = xa(e, t);
  if (r < 0)
    return !1;
  var a = e.length - 1;
  return r == a ? e.pop() : Ma.call(e, r, 1), --this.size, !0;
}
var La = Ra, Da = J;
function Fa(t) {
  var e = this.__data__, r = Da(e, t);
  return r < 0 ? void 0 : e[r][1];
}
var Ba = Fa, Ua = J;
function Ga(t) {
  return Ua(this.__data__, t) > -1;
}
var Ka = Ga, Ha = J;
function qa(t, e) {
  var r = this.__data__, a = Ha(r, t);
  return a < 0 ? (++this.size, r.push([t, e])) : r[a][1] = e, this;
}
var za = qa, Va = ja, Ja = La, Qa = Ba, Wa = Ka, Xa = za;
function I(t) {
  var e = -1, r = t == null ? 0 : t.length;
  for (this.clear(); ++e < r; ) {
    var a = t[e];
    this.set(a[0], a[1]);
  }
}
I.prototype.clear = Va;
I.prototype.delete = Ja;
I.prototype.get = Qa;
I.prototype.has = Wa;
I.prototype.set = Xa;
var Q = I, Ya = S, Za = A, ka = Ya(Za, "Map"), le = ka, Se = Ca, en = Q, tn = le;
function rn() {
  this.size = 0, this.__data__ = {
    hash: new Se(),
    map: new (tn || en)(),
    string: new Se()
  };
}
var an = rn;
function nn(t) {
  var e = typeof t;
  return e == "string" || e == "number" || e == "symbol" || e == "boolean" ? t !== "__proto__" : t === null;
}
var sn = nn, on = sn;
function cn(t, e) {
  var r = t.__data__;
  return on(e) ? r[typeof e == "string" ? "string" : "hash"] : r.map;
}
var W = cn, ln = W;
function un(t) {
  var e = ln(this, t).delete(t);
  return this.size -= e ? 1 : 0, e;
}
var fn = un, dn = W;
function hn(t) {
  return dn(this, t).get(t);
}
var gn = hn, pn = W;
function yn(t) {
  return pn(this, t).has(t);
}
var bn = yn, vn = W;
function $n(t, e) {
  var r = vn(this, t), a = r.size;
  return r.set(t, e), this.size += r.size == a ? 0 : 1, this;
}
var _n = $n, mn = an, An = fn, wn = gn, Tn = bn, On = _n;
function P(t) {
  var e = -1, r = t == null ? 0 : t.length;
  for (this.clear(); ++e < r; ) {
    var a = t[e];
    this.set(a[0], a[1]);
  }
}
P.prototype.clear = mn;
P.prototype.delete = An;
P.prototype.get = wn;
P.prototype.has = Tn;
P.prototype.set = On;
var ue = P, gt = ue, Cn = "Expected a function";
function fe(t, e) {
  if (typeof t != "function" || e != null && typeof e != "function")
    throw new TypeError(Cn);
  var r = function() {
    var a = arguments, n = e ? e.apply(this, a) : a[0], s = r.cache;
    if (s.has(n))
      return s.get(n);
    var i = t.apply(this, a);
    return r.cache = s.set(n, i) || s, i;
  };
  return r.cache = new (fe.Cache || gt)(), r;
}
fe.Cache = gt;
var Sn = fe, jn = Sn, En = 500;
function In(t) {
  var e = jn(t, function(a) {
    return r.size === En && r.clear(), a;
  }), r = e.cache;
  return e;
}
var Pn = In, xn = Pn, Nn = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g, Mn = /\\(\\)?/g, Rn = xn(function(t) {
  var e = [];
  return t.charCodeAt(0) === 46 && e.push(""), t.replace(Nn, function(r, a, n, s) {
    e.push(n ? s.replace(Mn, "$1") : a || r);
  }), e;
}), Ln = Rn;
function Dn(t, e) {
  for (var r = -1, a = t == null ? 0 : t.length, n = Array(a); ++r < a; )
    n[r] = e(t[r], r, t);
  return n;
}
var Fn = Dn, je = R, Bn = Fn, Un = O, Gn = oe, Kn = 1 / 0, Ee = je ? je.prototype : void 0, Ie = Ee ? Ee.toString : void 0;
function pt(t) {
  if (typeof t == "string")
    return t;
  if (Un(t))
    return Bn(t, pt) + "";
  if (Gn(t))
    return Ie ? Ie.call(t) : "";
  var e = t + "";
  return e == "0" && 1 / t == -Kn ? "-0" : e;
}
var Hn = pt, qn = Hn;
function zn(t) {
  return t == null ? "" : qn(t);
}
var Vn = zn, Jn = O, Qn = $r, Wn = Ln, Xn = Vn;
function Yn(t, e) {
  return Jn(t) ? t : Qn(t, e) ? [t] : Wn(Xn(t));
}
var Zn = Yn, kn = oe, es = 1 / 0;
function ts(t) {
  if (typeof t == "string" || kn(t))
    return t;
  var e = t + "";
  return e == "0" && 1 / t == -es ? "-0" : e;
}
var rs = ts, as = Zn, ns = rs;
function ss(t, e) {
  e = as(e, t);
  for (var r = 0, a = e.length; t != null && r < a; )
    t = t[ns(e[r++])];
  return r && r == a ? t : void 0;
}
var is = ss, os = is;
function cs(t, e, r) {
  var a = t == null ? void 0 : os(t, e);
  return a === void 0 ? r : a;
}
var ls = cs;
const y = /* @__PURE__ */ lt(ls);
var us = Q;
function fs() {
  this.__data__ = new us(), this.size = 0;
}
var ds = fs;
function hs(t) {
  var e = this.__data__, r = e.delete(t);
  return this.size = e.size, r;
}
var gs = hs;
function ps(t) {
  return this.__data__.get(t);
}
var ys = ps;
function bs(t) {
  return this.__data__.has(t);
}
var vs = bs, $s = Q, _s = le, ms = ue, As = 200;
function ws(t, e) {
  var r = this.__data__;
  if (r instanceof $s) {
    var a = r.__data__;
    if (!_s || a.length < As - 1)
      return a.push([t, e]), this.size = ++r.size, this;
    r = this.__data__ = new ms(a);
  }
  return r.set(t, e), this.size = r.size, this;
}
var Ts = ws, Os = Q, Cs = ds, Ss = gs, js = ys, Es = vs, Is = Ts;
function x(t) {
  var e = this.__data__ = new Os(t);
  this.size = e.size;
}
x.prototype.clear = Cs;
x.prototype.delete = Ss;
x.prototype.get = js;
x.prototype.has = Es;
x.prototype.set = Is;
var de = x;
function Ps(t, e) {
  for (var r = -1, a = t == null ? 0 : t.length; ++r < a && e(t[r], r, t) !== !1; )
    ;
  return t;
}
var xs = Ps, Ns = S, Ms = function() {
  try {
    var t = Ns(Object, "defineProperty");
    return t({}, "", {}), t;
  } catch {
  }
}(), Rs = Ms, Pe = Rs;
function Ls(t, e, r) {
  e == "__proto__" && Pe ? Pe(t, e, {
    configurable: !0,
    enumerable: !0,
    value: r,
    writable: !0
  }) : t[e] = r;
}
var yt = Ls, Ds = yt, Fs = ce, Bs = Object.prototype, Us = Bs.hasOwnProperty;
function Gs(t, e, r) {
  var a = t[e];
  (!(Us.call(t, e) && Fs(a, r)) || r === void 0 && !(e in t)) && Ds(t, e, r);
}
var bt = Gs, Ks = bt, Hs = yt;
function qs(t, e, r, a) {
  var n = !r;
  r || (r = {});
  for (var s = -1, i = e.length; ++s < i; ) {
    var o = e[s], c = a ? a(r[o], t[o], o, r, t) : void 0;
    c === void 0 && (c = t[o]), n ? Hs(r, o, c) : Ks(r, o, c);
  }
  return r;
}
var X = qs;
function zs(t, e) {
  for (var r = -1, a = Array(t); ++r < t; )
    a[r] = e(r);
  return a;
}
var Vs = zs, Js = L, Qs = C, Ws = "[object Arguments]";
function Xs(t) {
  return Qs(t) && Js(t) == Ws;
}
var Ys = Xs, xe = Ys, Zs = C, vt = Object.prototype, ks = vt.hasOwnProperty, ei = vt.propertyIsEnumerable, ti = xe(/* @__PURE__ */ function() {
  return arguments;
}()) ? xe : function(t) {
  return Zs(t) && ks.call(t, "callee") && !ei.call(t, "callee");
}, ri = ti, K = { exports: {} };
function ai() {
  return !1;
}
var ni = ai;
K.exports;
(function(t, e) {
  var r = A, a = ni, n = e && !e.nodeType && e, s = n && !0 && t && !t.nodeType && t, i = s && s.exports === n, o = i ? r.Buffer : void 0, c = o ? o.isBuffer : void 0, l = c || a;
  t.exports = l;
})(K, K.exports);
var he = K.exports, si = 9007199254740991, ii = /^(?:0|[1-9]\d*)$/;
function oi(t, e) {
  var r = typeof t;
  return e = e ?? si, !!e && (r == "number" || r != "symbol" && ii.test(t)) && t > -1 && t % 1 == 0 && t < e;
}
var ci = oi, li = 9007199254740991;
function ui(t) {
  return typeof t == "number" && t > -1 && t % 1 == 0 && t <= li;
}
var $t = ui, fi = L, di = $t, hi = C, gi = "[object Arguments]", pi = "[object Array]", yi = "[object Boolean]", bi = "[object Date]", vi = "[object Error]", $i = "[object Function]", _i = "[object Map]", mi = "[object Number]", Ai = "[object Object]", wi = "[object RegExp]", Ti = "[object Set]", Oi = "[object String]", Ci = "[object WeakMap]", Si = "[object ArrayBuffer]", ji = "[object DataView]", Ei = "[object Float32Array]", Ii = "[object Float64Array]", Pi = "[object Int8Array]", xi = "[object Int16Array]", Ni = "[object Int32Array]", Mi = "[object Uint8Array]", Ri = "[object Uint8ClampedArray]", Li = "[object Uint16Array]", Di = "[object Uint32Array]", g = {};
g[Ei] = g[Ii] = g[Pi] = g[xi] = g[Ni] = g[Mi] = g[Ri] = g[Li] = g[Di] = !0;
g[gi] = g[pi] = g[Si] = g[yi] = g[ji] = g[bi] = g[vi] = g[$i] = g[_i] = g[mi] = g[Ai] = g[wi] = g[Ti] = g[Oi] = g[Ci] = !1;
function Fi(t) {
  return hi(t) && di(t.length) && !!g[fi(t)];
}
var Bi = Fi;
function Ui(t) {
  return function(e) {
    return t(e);
  };
}
var ge = Ui, H = { exports: {} };
H.exports;
(function(t, e) {
  var r = ut, a = e && !e.nodeType && e, n = a && !0 && t && !t.nodeType && t, s = n && n.exports === a, i = s && r.process, o = function() {
    try {
      var c = n && n.require && n.require("util").types;
      return c || i && i.binding && i.binding("util");
    } catch {
    }
  }();
  t.exports = o;
})(H, H.exports);
var pe = H.exports, Gi = Bi, Ki = ge, Ne = pe, Me = Ne && Ne.isTypedArray, Hi = Me ? Ki(Me) : Gi, _t = Hi, qi = Vs, zi = ri, Vi = O, Ji = he, Qi = ci, Wi = _t, Xi = Object.prototype, Yi = Xi.hasOwnProperty;
function Zi(t, e) {
  var r = Vi(t), a = !r && zi(t), n = !r && !a && Ji(t), s = !r && !a && !n && Wi(t), i = r || a || n || s, o = i ? qi(t.length, String) : [], c = o.length;
  for (var l in t)
    (e || Yi.call(t, l)) && !(i && // Safari 9 has enumerable `arguments.length` in strict mode.
    (l == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
    n && (l == "offset" || l == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
    s && (l == "buffer" || l == "byteLength" || l == "byteOffset") || // Skip index properties.
    Qi(l, c))) && o.push(l);
  return o;
}
var mt = Zi, ki = Object.prototype;
function eo(t) {
  var e = t && t.constructor, r = typeof e == "function" && e.prototype || ki;
  return t === r;
}
var ye = eo;
function to(t, e) {
  return function(r) {
    return t(e(r));
  };
}
var At = to, ro = At, ao = ro(Object.keys, Object), no = ao, so = ye, io = no, oo = Object.prototype, co = oo.hasOwnProperty;
function lo(t) {
  if (!so(t))
    return io(t);
  var e = [];
  for (var r in Object(t))
    co.call(t, r) && r != "constructor" && e.push(r);
  return e;
}
var uo = lo, fo = dt, ho = $t;
function go(t) {
  return t != null && ho(t.length) && !fo(t);
}
var wt = go, po = mt, yo = uo, bo = wt;
function vo(t) {
  return bo(t) ? po(t) : yo(t);
}
var Y = vo, $o = X, _o = Y;
function mo(t, e) {
  return t && $o(e, _o(e), t);
}
var Ao = mo;
function wo(t) {
  var e = [];
  if (t != null)
    for (var r in Object(t))
      e.push(r);
  return e;
}
var To = wo, Oo = j, Co = ye, So = To, jo = Object.prototype, Eo = jo.hasOwnProperty;
function Io(t) {
  if (!Oo(t))
    return So(t);
  var e = Co(t), r = [];
  for (var a in t)
    a == "constructor" && (e || !Eo.call(t, a)) || r.push(a);
  return r;
}
var Po = Io, xo = mt, No = Po, Mo = wt;
function Ro(t) {
  return Mo(t) ? xo(t, !0) : No(t);
}
var be = Ro, Lo = X, Do = be;
function Fo(t, e) {
  return t && Lo(e, Do(e), t);
}
var Bo = Fo, q = { exports: {} };
q.exports;
(function(t, e) {
  var r = A, a = e && !e.nodeType && e, n = a && !0 && t && !t.nodeType && t, s = n && n.exports === a, i = s ? r.Buffer : void 0, o = i ? i.allocUnsafe : void 0;
  function c(l, u) {
    if (u)
      return l.slice();
    var f = l.length, d = o ? o(f) : new l.constructor(f);
    return l.copy(d), d;
  }
  t.exports = c;
})(q, q.exports);
var Uo = q.exports;
function Go(t, e) {
  var r = -1, a = t.length;
  for (e || (e = Array(a)); ++r < a; )
    e[r] = t[r];
  return e;
}
var Ko = Go;
function Ho(t, e) {
  for (var r = -1, a = t == null ? 0 : t.length, n = 0, s = []; ++r < a; ) {
    var i = t[r];
    e(i, r, t) && (s[n++] = i);
  }
  return s;
}
var qo = Ho;
function zo() {
  return [];
}
var Tt = zo, Vo = qo, Jo = Tt, Qo = Object.prototype, Wo = Qo.propertyIsEnumerable, Re = Object.getOwnPropertySymbols, Xo = Re ? function(t) {
  return t == null ? [] : (t = Object(t), Vo(Re(t), function(e) {
    return Wo.call(t, e);
  }));
} : Jo, ve = Xo, Yo = X, Zo = ve;
function ko(t, e) {
  return Yo(t, Zo(t), e);
}
var ec = ko;
function tc(t, e) {
  for (var r = -1, a = e.length, n = t.length; ++r < a; )
    t[n + r] = e[r];
  return t;
}
var Ot = tc, rc = At, ac = rc(Object.getPrototypeOf, Object), Ct = ac, nc = Ot, sc = Ct, ic = ve, oc = Tt, cc = Object.getOwnPropertySymbols, lc = cc ? function(t) {
  for (var e = []; t; )
    nc(e, ic(t)), t = sc(t);
  return e;
} : oc, St = lc, uc = X, fc = St;
function dc(t, e) {
  return uc(t, fc(t), e);
}
var hc = dc, gc = Ot, pc = O;
function yc(t, e, r) {
  var a = e(t);
  return pc(t) ? a : gc(a, r(t));
}
var jt = yc, bc = jt, vc = ve, $c = Y;
function _c(t) {
  return bc(t, $c, vc);
}
var Et = _c, mc = jt, Ac = St, wc = be;
function Tc(t) {
  return mc(t, wc, Ac);
}
var Oc = Tc, Cc = S, Sc = A, jc = Cc(Sc, "DataView"), Ec = jc, Ic = S, Pc = A, xc = Ic(Pc, "Promise"), Nc = xc, Mc = S, Rc = A, Lc = Mc(Rc, "Set"), Dc = Lc, Fc = S, Bc = A, Uc = Fc(Bc, "WeakMap"), Gc = Uc, re = Ec, ae = le, ne = Nc, se = Dc, ie = Gc, It = L, N = ht, Le = "[object Map]", Kc = "[object Object]", De = "[object Promise]", Fe = "[object Set]", Be = "[object WeakMap]", Ue = "[object DataView]", Hc = N(re), qc = N(ae), zc = N(ne), Vc = N(se), Jc = N(ie), T = It;
(re && T(new re(new ArrayBuffer(1))) != Ue || ae && T(new ae()) != Le || ne && T(ne.resolve()) != De || se && T(new se()) != Fe || ie && T(new ie()) != Be) && (T = function(t) {
  var e = It(t), r = e == Kc ? t.constructor : void 0, a = r ? N(r) : "";
  if (a)
    switch (a) {
      case Hc:
        return Ue;
      case qc:
        return Le;
      case zc:
        return De;
      case Vc:
        return Fe;
      case Jc:
        return Be;
    }
  return e;
});
var Z = T, Qc = Object.prototype, Wc = Qc.hasOwnProperty;
function Xc(t) {
  var e = t.length, r = new t.constructor(e);
  return e && typeof t[0] == "string" && Wc.call(t, "index") && (r.index = t.index, r.input = t.input), r;
}
var Yc = Xc, Zc = A, kc = Zc.Uint8Array, Pt = kc, Ge = Pt;
function el(t) {
  var e = new t.constructor(t.byteLength);
  return new Ge(e).set(new Ge(t)), e;
}
var $e = el, tl = $e;
function rl(t, e) {
  var r = e ? tl(t.buffer) : t.buffer;
  return new t.constructor(r, t.byteOffset, t.byteLength);
}
var al = rl, nl = /\w*$/;
function sl(t) {
  var e = new t.constructor(t.source, nl.exec(t));
  return e.lastIndex = t.lastIndex, e;
}
var il = sl, Ke = R, He = Ke ? Ke.prototype : void 0, qe = He ? He.valueOf : void 0;
function ol(t) {
  return qe ? Object(qe.call(t)) : {};
}
var cl = ol, ll = $e;
function ul(t, e) {
  var r = e ? ll(t.buffer) : t.buffer;
  return new t.constructor(r, t.byteOffset, t.length);
}
var fl = ul, dl = $e, hl = al, gl = il, pl = cl, yl = fl, bl = "[object Boolean]", vl = "[object Date]", $l = "[object Map]", _l = "[object Number]", ml = "[object RegExp]", Al = "[object Set]", wl = "[object String]", Tl = "[object Symbol]", Ol = "[object ArrayBuffer]", Cl = "[object DataView]", Sl = "[object Float32Array]", jl = "[object Float64Array]", El = "[object Int8Array]", Il = "[object Int16Array]", Pl = "[object Int32Array]", xl = "[object Uint8Array]", Nl = "[object Uint8ClampedArray]", Ml = "[object Uint16Array]", Rl = "[object Uint32Array]";
function Ll(t, e, r) {
  var a = t.constructor;
  switch (e) {
    case Ol:
      return dl(t);
    case bl:
    case vl:
      return new a(+t);
    case Cl:
      return hl(t, r);
    case Sl:
    case jl:
    case El:
    case Il:
    case Pl:
    case xl:
    case Nl:
    case Ml:
    case Rl:
      return yl(t, r);
    case $l:
      return new a();
    case _l:
    case wl:
      return new a(t);
    case ml:
      return gl(t);
    case Al:
      return new a();
    case Tl:
      return pl(t);
  }
}
var Dl = Ll, Fl = j, ze = Object.create, Bl = /* @__PURE__ */ function() {
  function t() {
  }
  return function(e) {
    if (!Fl(e))
      return {};
    if (ze)
      return ze(e);
    t.prototype = e;
    var r = new t();
    return t.prototype = void 0, r;
  };
}(), Ul = Bl, Gl = Ul, Kl = Ct, Hl = ye;
function ql(t) {
  return typeof t.constructor == "function" && !Hl(t) ? Gl(Kl(t)) : {};
}
var zl = ql, Vl = Z, Jl = C, Ql = "[object Map]";
function Wl(t) {
  return Jl(t) && Vl(t) == Ql;
}
var Xl = Wl, Yl = Xl, Zl = ge, Ve = pe, Je = Ve && Ve.isMap, kl = Je ? Zl(Je) : Yl, eu = kl, tu = Z, ru = C, au = "[object Set]";
function nu(t) {
  return ru(t) && tu(t) == au;
}
var su = nu, iu = su, ou = ge, Qe = pe, We = Qe && Qe.isSet, cu = We ? ou(We) : iu, lu = cu, uu = de, fu = xs, du = bt, hu = Ao, gu = Bo, pu = Uo, yu = Ko, bu = ec, vu = hc, $u = Et, _u = Oc, mu = Z, Au = Yc, wu = Dl, Tu = zl, Ou = O, Cu = he, Su = eu, ju = j, Eu = lu, Iu = Y, Pu = be, xu = 1, Nu = 2, Mu = 4, xt = "[object Arguments]", Ru = "[object Array]", Lu = "[object Boolean]", Du = "[object Date]", Fu = "[object Error]", Nt = "[object Function]", Bu = "[object GeneratorFunction]", Uu = "[object Map]", Gu = "[object Number]", Mt = "[object Object]", Ku = "[object RegExp]", Hu = "[object Set]", qu = "[object String]", zu = "[object Symbol]", Vu = "[object WeakMap]", Ju = "[object ArrayBuffer]", Qu = "[object DataView]", Wu = "[object Float32Array]", Xu = "[object Float64Array]", Yu = "[object Int8Array]", Zu = "[object Int16Array]", ku = "[object Int32Array]", ef = "[object Uint8Array]", tf = "[object Uint8ClampedArray]", rf = "[object Uint16Array]", af = "[object Uint32Array]", h = {};
h[xt] = h[Ru] = h[Ju] = h[Qu] = h[Lu] = h[Du] = h[Wu] = h[Xu] = h[Yu] = h[Zu] = h[ku] = h[Uu] = h[Gu] = h[Mt] = h[Ku] = h[Hu] = h[qu] = h[zu] = h[ef] = h[tf] = h[rf] = h[af] = !0;
h[Fu] = h[Nt] = h[Vu] = !1;
function G(t, e, r, a, n, s) {
  var i, o = e & xu, c = e & Nu, l = e & Mu;
  if (r && (i = n ? r(t, a, n, s) : r(t)), i !== void 0)
    return i;
  if (!ju(t))
    return t;
  var u = Ou(t);
  if (u) {
    if (i = Au(t), !o)
      return yu(t, i);
  } else {
    var f = mu(t), d = f == Nt || f == Bu;
    if (Cu(t))
      return pu(t, o);
    if (f == Mt || f == xt || d && !n) {
      if (i = c || d ? {} : Tu(t), !o)
        return c ? vu(t, gu(i, t)) : bu(t, hu(i, t));
    } else {
      if (!h[f])
        return n ? t : {};
      i = wu(t, f, o);
    }
  }
  s || (s = new uu());
  var m = s.get(t);
  if (m)
    return m;
  s.set(t, i), Eu(t) ? t.forEach(function(b) {
    i.add(G(b, e, r, b, t, s));
  }) : Su(t) && t.forEach(function(b, v) {
    i.set(v, G(b, e, r, v, t, s));
  });
  var $ = l ? c ? _u : $u : c ? Pu : Iu, _ = u ? void 0 : $(t);
  return fu(_ || t, function(b, v) {
    _ && (v = b, b = t[v]), du(i, v, G(b, e, r, v, t, s));
  }), i;
}
var nf = G, sf = "__lodash_hash_undefined__";
function of(t) {
  return this.__data__.set(t, sf), this;
}
var cf = of;
function lf(t) {
  return this.__data__.has(t);
}
var uf = lf, ff = ue, df = cf, hf = uf;
function z(t) {
  var e = -1, r = t == null ? 0 : t.length;
  for (this.__data__ = new ff(); ++e < r; )
    this.add(t[e]);
}
z.prototype.add = z.prototype.push = df;
z.prototype.has = hf;
var gf = z;
function pf(t, e) {
  for (var r = -1, a = t == null ? 0 : t.length; ++r < a; )
    if (e(t[r], r, t))
      return !0;
  return !1;
}
var yf = pf;
function bf(t, e) {
  return t.has(e);
}
var vf = bf, $f = gf, _f = yf, mf = vf, Af = 1, wf = 2;
function Tf(t, e, r, a, n, s) {
  var i = r & Af, o = t.length, c = e.length;
  if (o != c && !(i && c > o))
    return !1;
  var l = s.get(t), u = s.get(e);
  if (l && u)
    return l == e && u == t;
  var f = -1, d = !0, m = r & wf ? new $f() : void 0;
  for (s.set(t, e), s.set(e, t); ++f < o; ) {
    var $ = t[f], _ = e[f];
    if (a)
      var b = i ? a(_, $, f, e, t, s) : a($, _, f, t, e, s);
    if (b !== void 0) {
      if (b)
        continue;
      d = !1;
      break;
    }
    if (m) {
      if (!_f(e, function(v, w) {
        if (!mf(m, w) && ($ === v || n($, v, r, a, s)))
          return m.push(w);
      })) {
        d = !1;
        break;
      }
    } else if (!($ === _ || n($, _, r, a, s))) {
      d = !1;
      break;
    }
  }
  return s.delete(t), s.delete(e), d;
}
var Rt = Tf;
function Of(t) {
  var e = -1, r = Array(t.size);
  return t.forEach(function(a, n) {
    r[++e] = [n, a];
  }), r;
}
var Cf = Of;
function Sf(t) {
  var e = -1, r = Array(t.size);
  return t.forEach(function(a) {
    r[++e] = a;
  }), r;
}
var jf = Sf, Xe = R, Ye = Pt, Ef = ce, If = Rt, Pf = Cf, xf = jf, Nf = 1, Mf = 2, Rf = "[object Boolean]", Lf = "[object Date]", Df = "[object Error]", Ff = "[object Map]", Bf = "[object Number]", Uf = "[object RegExp]", Gf = "[object Set]", Kf = "[object String]", Hf = "[object Symbol]", qf = "[object ArrayBuffer]", zf = "[object DataView]", Ze = Xe ? Xe.prototype : void 0, ee = Ze ? Ze.valueOf : void 0;
function Vf(t, e, r, a, n, s, i) {
  switch (r) {
    case zf:
      if (t.byteLength != e.byteLength || t.byteOffset != e.byteOffset)
        return !1;
      t = t.buffer, e = e.buffer;
    case qf:
      return !(t.byteLength != e.byteLength || !s(new Ye(t), new Ye(e)));
    case Rf:
    case Lf:
    case Bf:
      return Ef(+t, +e);
    case Df:
      return t.name == e.name && t.message == e.message;
    case Uf:
    case Kf:
      return t == e + "";
    case Ff:
      var o = Pf;
    case Gf:
      var c = a & Nf;
      if (o || (o = xf), t.size != e.size && !c)
        return !1;
      var l = i.get(t);
      if (l)
        return l == e;
      a |= Mf, i.set(t, e);
      var u = If(o(t), o(e), a, n, s, i);
      return i.delete(t), u;
    case Hf:
      if (ee)
        return ee.call(t) == ee.call(e);
  }
  return !1;
}
var Jf = Vf, ke = Et, Qf = 1, Wf = Object.prototype, Xf = Wf.hasOwnProperty;
function Yf(t, e, r, a, n, s) {
  var i = r & Qf, o = ke(t), c = o.length, l = ke(e), u = l.length;
  if (c != u && !i)
    return !1;
  for (var f = c; f--; ) {
    var d = o[f];
    if (!(i ? d in e : Xf.call(e, d)))
      return !1;
  }
  var m = s.get(t), $ = s.get(e);
  if (m && $)
    return m == e && $ == t;
  var _ = !0;
  s.set(t, e), s.set(e, t);
  for (var b = i; ++f < c; ) {
    d = o[f];
    var v = t[d], w = e[d];
    if (a)
      var me = i ? a(w, v, d, e, t, s) : a(v, w, d, t, e, s);
    if (!(me === void 0 ? v === w || n(v, w, r, a, s) : me)) {
      _ = !1;
      break;
    }
    b || (b = d == "constructor");
  }
  if (_ && !b) {
    var D = t.constructor, F = e.constructor;
    D != F && "constructor" in t && "constructor" in e && !(typeof D == "function" && D instanceof D && typeof F == "function" && F instanceof F) && (_ = !1);
  }
  return s.delete(t), s.delete(e), _;
}
var Zf = Yf, te = de, kf = Rt, ed = Jf, td = Zf, et = Z, tt = O, rt = he, rd = _t, ad = 1, at = "[object Arguments]", nt = "[object Array]", U = "[object Object]", nd = Object.prototype, st = nd.hasOwnProperty;
function sd(t, e, r, a, n, s) {
  var i = tt(t), o = tt(e), c = i ? nt : et(t), l = o ? nt : et(e);
  c = c == at ? U : c, l = l == at ? U : l;
  var u = c == U, f = l == U, d = c == l;
  if (d && rt(t)) {
    if (!rt(e))
      return !1;
    i = !0, u = !1;
  }
  if (d && !u)
    return s || (s = new te()), i || rd(t) ? kf(t, e, r, a, n, s) : ed(t, e, c, r, a, n, s);
  if (!(r & ad)) {
    var m = u && st.call(t, "__wrapped__"), $ = f && st.call(e, "__wrapped__");
    if (m || $) {
      var _ = m ? t.value() : t, b = $ ? e.value() : e;
      return s || (s = new te()), n(_, b, r, a, s);
    }
  }
  return d ? (s || (s = new te()), td(t, e, r, a, n, s)) : !1;
}
var id = sd, od = id, it = C;
function Lt(t, e, r, a, n) {
  return t === e ? !0 : t == null || e == null || !it(t) && !it(e) ? t !== t && e !== e : od(t, e, r, a, Lt, n);
}
var cd = Lt, ld = de, ud = cd, fd = 1, dd = 2;
function hd(t, e, r, a) {
  var n = r.length, s = n, i = !a;
  if (t == null)
    return !s;
  for (t = Object(t); n--; ) {
    var o = r[n];
    if (i && o[2] ? o[1] !== t[o[0]] : !(o[0] in t))
      return !1;
  }
  for (; ++n < s; ) {
    o = r[n];
    var c = o[0], l = t[c], u = o[1];
    if (i && o[2]) {
      if (l === void 0 && !(c in t))
        return !1;
    } else {
      var f = new ld();
      if (a)
        var d = a(l, u, c, t, e, f);
      if (!(d === void 0 ? ud(u, l, fd | dd, a, f) : d))
        return !1;
    }
  }
  return !0;
}
var gd = hd, pd = j;
function yd(t) {
  return t === t && !pd(t);
}
var bd = yd, vd = bd, $d = Y;
function _d(t) {
  for (var e = $d(t), r = e.length; r--; ) {
    var a = e[r], n = t[a];
    e[r] = [a, n, vd(n)];
  }
  return e;
}
var md = _d;
function Ad(t, e) {
  return function(r) {
    return r == null ? !1 : r[t] === e && (e !== void 0 || t in Object(r));
  };
}
var wd = Ad, Td = gd, Od = md, Cd = wd;
function Sd(t) {
  var e = Od(t);
  return e.length == 1 && e[0][2] ? Cd(e[0][0], e[0][1]) : function(r) {
    return r === t || Td(r, t, e);
  };
}
var jd = Sd, Ed = nf, Id = jd, Pd = 1;
function xd(t) {
  return Id(Ed(t, Pd));
}
var Nd = xd;
const Md = /* @__PURE__ */ lt(Nd);
class ot {
  constructor({
    items: e = [],
    identifierName: r = "id",
    getNewId: a
  } = {}) {
    p(this, "sequence", 0);
    p(this, "items", []);
    p(this, "database", null);
    p(this, "name", null);
    p(this, "identifierName", "id");
    p(this, "getNewId");
    if (!Array.isArray(e))
      throw new Error(
        "Can't initialize a Collection with anything else than an array of items"
      );
    this.identifierName = r, this.getNewId = a || this.getNewIdFromSequence, e.map(this.addOne.bind(this));
  }
  /**
   * A Collection may need to access other collections (e.g. for embedding references)
   * This is done through a reference to the parent database.
   */
  setDatabase(e) {
    this.database = e;
  }
  setName(e) {
    this.name = e;
  }
  /**
   * Get a one to many embedder function for a given resource name
   *
   * @example embed posts for an author
   *
   *     authorsCollection._oneToManyEmbedder('posts')
   *
   * @returns Function item => item
   */
  _oneToManyEmbedder(e) {
    if (this.name == null)
      throw new Error("Can't embed references without a collection name");
    const a = `${this.name.slice(0, -1)}_id`;
    return (n) => {
      if (this.database == null)
        throw new Error("Can't embed references without a database");
      const s = this.database.collections[e];
      if (!s)
        throw new Error(
          `Can't embed a non-existing collection ${e}`
        );
      return Array.isArray(n[e]) ? n[e] = s.getAll({
        filter: (i) => n[e].indexOf(
          i[s.identifierName]
        ) !== -1
      }) : n[e] = s.getAll({
        filter: (i) => i[a] === n[this.identifierName]
      }), n;
    };
  }
  /**
   * Get a many to one embedder function for a given resource name
   *
   * @example embed author for a post
   *
   *     postsCollection._manyToOneEmbedder('author')
   *
   * @returns Function item => item
   */
  _manyToOneEmbedder(e) {
    const r = `${e}s`, a = `${e}_id`;
    return (n) => {
      if (this.database == null)
        throw new Error("Can't embed references without a database");
      const s = this.database.collections[r];
      if (!s)
        throw new Error(
          `Can't embed a non-existing collection ${e}`
        );
      try {
        n[e] = s.getOne(
          n[a]
        );
      } catch {
      }
      return n;
    };
  }
  /**
   * @param String[] An array of resource names, e.g. ['books', 'country']
   * @returns Function item => item
   */
  _itemEmbedder(e) {
    const a = (Array.isArray(e) ? e : [e]).map(
      (n) => n.endsWith("s") ? this._oneToManyEmbedder(n) : this._manyToOneEmbedder(n)
    );
    return (n) => a.reduce(
      (s, i) => i(s),
      n
    );
  }
  getCount(e) {
    return this.getAll(e).length;
  }
  getAll(e) {
    let r = this.items.slice(0);
    return e && (e.filter && (r = Dt(r, e.filter)), e.sort && (r = Fd(r, e.sort)), e.range && (r = Bd(r, e.range)), r = r.map((a) => Object.assign({}, a)), e.embed && this.database && (r = r.map(this._itemEmbedder(e.embed)))), r;
  }
  getIndex(e) {
    return this.items.findIndex(
      // biome-ignore lint/suspicious/noDoubleEquals: we want implicit type coercion
      (r) => r[this.identifierName] == e
    );
  }
  getOne(e, r) {
    const a = this.getIndex(e);
    if (a === -1)
      throw new Error(`No item with identifier ${e}`);
    let n = this.items[a];
    return n = Object.assign({}, n), r != null && r.embed && this.database && (n = this._itemEmbedder(r.embed)(n)), n;
  }
  getNewIdFromSequence() {
    return this.sequence++;
  }
  addOne(e) {
    const r = e[this.identifierName];
    if (r != null) {
      if (this.getIndex(r) !== -1)
        throw new Error(
          `An item with the identifier ${r} already exists`
        );
      typeof r == "number" && (this.sequence = Math.max(this.sequence, r) + 1);
    } else
      e[this.identifierName] = this.getNewId();
    return this.items.push(e), Object.assign({}, e);
  }
  updateOne(e, r) {
    const a = this.getIndex(e);
    if (a === -1)
      throw new Error(`No item with identifier ${e}`);
    for (const n in r)
      this.items[a][n] = r[n];
    return Object.assign({}, this.items[a]);
  }
  removeOne(e) {
    const r = this.getIndex(e);
    if (r === -1)
      throw new Error(`No item with identifier ${e}`);
    const a = this.items[r];
    return this.items.splice(r, 1), typeof e == "number" && e == this.sequence - 1 && this.sequence--, a;
  }
}
const Rd = (t, e) => t.reduce((r, a) => r && e(a), !0), Ld = (t, e) => t.reduce((r, a) => r || e(a), !1), Dd = (t, e) => t.reduce(
  (r, a, n) => {
    if (r != null)
      return r;
    const s = t.slice(0, n + 1).join("."), i = t.slice(n + 1).join("."), o = y(e, s);
    return Array.isArray(o) && n < t.length - 1 ? [s, i] : void 0;
  },
  void 0
), ct = (t, e) => {
  if (t.indexOf("_q") !== -1) {
    const r = t.replace(/(_q)$/, ""), a = new RegExp(e.toString(), "i");
    return (n) => {
      var s;
      return ((s = y(n, r)) == null ? void 0 : s.toString().match(a)) !== null;
    };
  }
  if (t.indexOf("_lte") !== -1) {
    const r = t.replace(/(_lte)$/, "");
    return (a) => y(a, r) <= e;
  }
  if (t.indexOf("_gte") !== -1) {
    const r = t.replace(/(_gte)$/, "");
    return (a) => y(a, r) >= e;
  }
  if (t.indexOf("_lt") !== -1) {
    const r = t.replace(/(_lt)$/, "");
    return (a) => y(a, r) < e;
  }
  if (t.indexOf("_gt") !== -1) {
    const r = t.replace(/(_gt)$/, "");
    return (a) => y(a, r) > e;
  }
  if (t.indexOf("_neq_any") !== -1) {
    const r = t.replace(/(_neq_any)$/, ""), a = Array.isArray(e) ? e : [e];
    return (n) => a.every((s) => y(n, r) != s);
  }
  if (t.indexOf("_neq") !== -1) {
    const r = t.replace(/(_neq)$/, "");
    return (a) => y(a, r) != e;
  }
  if (t.indexOf("_eq_any") !== -1) {
    const r = t.replace(/(_eq_any)$/, ""), a = Array.isArray(e) ? e : [e];
    return (n) => a.some((s) => y(n, r) == s);
  }
  if (t.indexOf("_eq") !== -1) {
    const r = t.replace(/(_eq)$/, "");
    return (a) => y(a, r) == e;
  }
  if (t.indexOf("_inc_any") !== -1) {
    const r = t.replace(/(_inc_any)$/, ""), a = Array.isArray(e) ? e : [e];
    return (n) => a.some((s) => {
      const i = y(n, r);
      return Array.isArray(i) || typeof i == "string" ? i.includes(s) : !1;
    });
  }
  if (t.indexOf("_inc") !== -1) {
    const r = t.replace(/(_inc)$/, ""), a = Array.isArray(e) ? e : [e];
    return (n) => a.every((s) => {
      const i = y(n, r);
      return Array.isArray(i) || typeof i == "string" ? i.includes(s) : !1;
    });
  }
  if (t.indexOf("_ninc_any") !== -1) {
    const r = t.replace(/(_ninc_any)$/, ""), a = Array.isArray(e) ? e : [e];
    return (n) => a.every((s) => {
      const i = y(n, r);
      return Array.isArray(i) || typeof i == "string" ? !i.includes(s) : !1;
    });
  }
  return Array.isArray(e) ? (r) => Array.isArray(y(r, t)) ? Rd(e, (a) => {
    const n = y(r, t);
    return Array.isArray(n) ? Ld(n, (s) => s == a) : !1;
  }) : e.filter((a) => a == y(r, t)).length > 0 : typeof e == "object" ? (r) => Md(e)(y(r, t)) : (r) => {
    const a = y(r, t);
    return Array.isArray(a) && typeof e == "string" ? a.indexOf(e) !== -1 : typeof a == "boolean" && typeof e == "string" ? a === (e === "true") : a == e;
  };
};
function Dt(t, e) {
  if (typeof e == "function")
    return t.filter(e);
  if (e instanceof Object) {
    const r = Object.keys(e).map((a) => {
      if (a === "q" && typeof e.q == "string") {
        const i = Ud(e.q), o = (c) => {
          for (const l in c) {
            const u = c[l];
            if (typeof u == "object" && o(u) || u && typeof u == "string" && u.match && u.match(i) !== null)
              return !0;
          }
          return !1;
        };
        return o;
      }
      const n = a.split("."), s = e[a];
      return n.length > 1 ? (i) => {
        const o = Dd(
          n,
          i
        );
        if (o) {
          const [c, l] = o, u = y(i, c);
          return Array.isArray(u) ? Dt(u, {
            [l]: s
          }).length > 0 : !1;
        }
        return ct(a, s)(i);
      } : ct(a, s);
    });
    return t.filter(
      (a) => r.reduce(
        (n, s) => n && s(a),
        !0
      )
    );
  }
  throw new Error("Unsupported filter type");
}
function Fd(t, e) {
  if (typeof e == "function")
    return t.sort(e);
  if (typeof e == "string")
    return t.sort((r, a) => r[e] > a[e] ? 1 : r[e] < a[e] ? -1 : 0);
  if (Array.isArray(e)) {
    const r = e[0], a = e[1].toLowerCase() === "asc" ? 1 : -1;
    return t.sort((n, s) => n[r] > s[r] ? a : n[r] < s[r] ? -1 * a : 0);
  }
  throw new Error("Unsupported sort type");
}
function Bd(t, e) {
  if (Array.isArray(e))
    return t.slice(
      e[0],
      e[1] !== void 0 ? e[1] + 1 : void 0
    );
  throw new Error("Unsupported range type");
}
function Ud(t) {
  const n = t.trim().replace(/[.*+?^${}()|[\]\\]/g, "\\$&").split(" ").map((i) => `(${i})`).join("|");
  return new RegExp(n, "i");
}
class Gd {
  constructor(e) {
    p(this, "obj", null);
    p(this, "database", null);
    p(this, "name", null);
    if (!(e instanceof Object))
      throw new Error(
        "Can't initialize a Single with anything except an object"
      );
    this.obj = e;
  }
  /**
   * A Single may need to access other collections (e.g. for embedded
   * references) This is done through a reference to the parent database.
   */
  setDatabase(e) {
    this.database = e;
  }
  setName(e) {
    this.name = e;
  }
  // No need to embed Singles, since they are by their nature top-level
  // No need to worry about remote references, (i.e. mysingleton_id=1) since
  // it is by definition a singleton
  _oneToManyEmbedder(e) {
    return (r) => {
      if (this.database == null)
        throw new Error("Can't embed references without a database");
      const a = this.database.collections[e];
      if (!a)
        throw new Error(
          `Can't embed a non-existing collection ${e}`
        );
      return r[e] = a.getAll({
        filter: (n) => r[e].indexOf(
          n[a.identifierName]
        ) !== -1
      }), r;
    };
  }
  _manyToOneEmbedder(e) {
    const r = `${e}s`, a = `${e}_id`;
    return (n) => {
      if (this.database == null)
        throw new Error("Can't embed references without a database");
      const s = this.database.collections[r];
      if (!s)
        throw new Error(
          `Can't embed a non-existing collection ${e}`
        );
      try {
        n[e] = s.getOne(
          n[a]
        );
      } catch {
      }
      return n;
    };
  }
  _itemEmbedder(e) {
    const a = (Array.isArray(e) ? e : [e]).map(
      (n) => n.endsWith("s") ? this._oneToManyEmbedder(n) : this._manyToOneEmbedder(n)
    );
    return (n) => a.reduce(
      (s, i) => i(s),
      n
    );
  }
  getOnly(e) {
    let r = this.obj;
    return e != null && e.embed && this.database && (r = Object.assign({}, r), r = this._itemEmbedder(e.embed)(r)), r;
  }
  updateOnly(e) {
    if (this.obj == null)
      throw new Error("Can't update a non-existing object");
    for (const r in e)
      this.obj[r] = e[r];
    return this.obj;
  }
}
class Kd {
  constructor({
    data: e,
    identifierName: r = "id",
    getNewId: a
  } = {}) {
    p(this, "identifierName", "id");
    p(this, "collections", {});
    p(this, "singles", {});
    p(this, "getNewId");
    this.getNewId = a, this.identifierName = r, e && this.init(e);
  }
  /**
   * Shortcut for adding several collections if identifierName is always the same
   */
  init(e) {
    for (const r in e) {
      const a = e[r];
      Array.isArray(a) ? this.addCollection(
        r,
        new ot({
          items: a,
          identifierName: this.identifierName,
          getNewId: this.getNewId
        })
      ) : this.addSingle(r, new Gd(a));
    }
  }
  addCollection(e, r) {
    this.collections[e] = r, r.setDatabase(this), r.setName(e);
  }
  getCollection(e) {
    return this.collections[e];
  }
  getCollectionNames() {
    return Object.keys(this.collections);
  }
  addSingle(e, r) {
    this.singles[e] = r, r.setDatabase(this), r.setName(e);
  }
  getSingle(e) {
    return this.singles[e];
  }
  getSingleNames() {
    return Object.keys(this.singles);
  }
  /**
   * @param {string} name
   * @param {string} params As decoded from the query string, e.g. { sort: "name", filter: {enabled:true}, slice: [10, 20] }
   */
  getCount(e, r) {
    return this.collections[e].getCount(r);
  }
  /**
   * @param {string} name
   * @param {string} params As decoded from the query string, e.g. { sort: "name", filter: {enabled:true}, slice: [10, 20] }
   */
  getAll(e, r) {
    return this.collections[e].getAll(r);
  }
  getOne(e, r, a) {
    return this.collections[e].getOne(r, a);
  }
  addOne(e, r) {
    return Object.prototype.hasOwnProperty.call(this.collections, e) || this.addCollection(
      e,
      new ot({
        items: [],
        identifierName: this.identifierName,
        getNewId: this.getNewId
      })
    ), this.collections[e].addOne(r);
  }
  updateOne(e, r, a) {
    return this.collections[e].updateOne(r, a);
  }
  removeOne(e, r) {
    return this.collections[e].removeOne(r);
  }
  getOnly(e, r) {
    return this.singles[e].getOnly();
  }
  updateOnly(e, r) {
    return this.singles[e].updateOnly(r);
  }
}
class _e {
  constructor({
    baseUrl: e = "",
    defaultQuery: r = () => ({}),
    database: a,
    middlewares: n,
    ...s
  } = {}) {
    p(this, "baseUrl", "");
    p(this, "defaultQuery", () => ({}));
    p(this, "middlewares");
    p(this, "database");
    this.baseUrl = e, this.defaultQuery = r, this.middlewares = n || [], a ? this.database = a : this.database = new Kd(s);
  }
  /**
   * @param Function ResourceName => object
   */
  setDefaultQuery(e) {
    this.defaultQuery = e;
  }
  getContext(e) {
    var a, n;
    for (const s of this.database.getSingleNames())
      if ((a = e.url) != null && a.match(
        new RegExp(`^${this.baseUrl}\\/(${s})(\\/?.*)?$`)
      ))
        return {
          ...e,
          single: s
        };
    const r = (n = e.url) == null ? void 0 : n.match(
      new RegExp(
        `^${this.baseUrl}\\/([^\\/?]+)(\\/(\\w+|\\d+))?(\\?.*)?$`
      )
    );
    if (r) {
      const s = r[1], i = Object.assign(
        {},
        this.defaultQuery(s),
        e.params
      );
      return {
        ...e,
        collection: s,
        params: i
      };
    }
    return e;
  }
  async handle(e) {
    const r = this.getContext(e);
    let a = 0;
    const n = [...this.middlewares], s = (i) => {
      const o = n[a++];
      return o ? o(i, s) : this.handleRequest(i);
    };
    try {
      return await s(r);
    } catch (i) {
      if (i instanceof Error)
        throw i;
      return i;
    }
  }
  handleRequest(e) {
    var s, i;
    for (const o of this.database.getSingleNames())
      if ((s = e.url) != null && s.match(
        new RegExp(`^${this.baseUrl}\\/(${o})(\\/?.*)?$`)
      )) {
        if (e.method === "GET")
          try {
            return {
              status: 200,
              body: this.database.getOnly(o),
              headers: {
                "Content-Type": "application/json"
              }
            };
          } catch {
            return {
              status: 404,
              headers: {}
            };
          }
        if (e.method === "PUT")
          try {
            return e.requestBody == null ? {
              status: 400,
              headers: {}
            } : {
              status: 200,
              body: this.database.updateOnly(
                o,
                e.requestBody
              ),
              headers: {
                "Content-Type": "application/json"
              }
            };
          } catch {
            return {
              status: 404,
              headers: {}
            };
          }
        if (e.method === "PATCH")
          try {
            return e.requestBody == null ? {
              status: 400,
              headers: {}
            } : {
              status: 200,
              body: this.database.updateOnly(
                o,
                e.requestBody
              ),
              headers: {
                "Content-Type": "application/json"
              }
            };
          } catch {
            return {
              status: 404,
              headers: {}
            };
          }
      }
    const r = (i = e.url) == null ? void 0 : i.match(
      new RegExp(
        `^${this.baseUrl}\\/([^\\/?]+)(\\/(\\w+|\\d+))?(\\?.*)?$`
      )
    );
    if (!r)
      return { status: 404, headers: {} };
    const a = r[1], n = Object.assign(
      {},
      this.defaultQuery(a),
      e.params
    );
    if (r[2]) {
      if (!this.database.getCollection(a))
        return { status: 404, headers: {} };
      const o = r[3];
      if (e.method === "GET")
        try {
          return {
            status: 200,
            body: this.database.getOne(a, o, n),
            headers: {
              "Content-Type": "application/json"
            }
          };
        } catch {
          return {
            status: 404,
            headers: {}
          };
        }
      if (e.method === "PUT")
        try {
          return e.requestBody == null ? {
            status: 400,
            headers: {}
          } : {
            status: 200,
            body: this.database.updateOne(
              a,
              o,
              e.requestBody
            ),
            headers: {
              "Content-Type": "application/json"
            }
          };
        } catch {
          return {
            status: 404,
            headers: {}
          };
        }
      if (e.method === "PATCH")
        try {
          return e.requestBody == null ? {
            status: 400,
            headers: {}
          } : {
            status: 200,
            body: this.database.updateOne(
              a,
              o,
              e.requestBody
            ),
            headers: {
              "Content-Type": "application/json"
            }
          };
        } catch {
          return {
            status: 404,
            headers: {}
          };
        }
      if (e.method === "DELETE")
        try {
          return {
            status: 200,
            body: this.database.removeOne(a, o),
            headers: {
              "Content-Type": "application/json"
            }
          };
        } catch {
          return {
            status: 404,
            headers: {}
          };
        }
    } else {
      if (e.method === "GET") {
        if (!this.database.getCollection(a))
          return { status: 404, headers: {} };
        const o = this.database.getCount(
          a,
          n.filter ? { filter: n.filter } : {}
        );
        if (o > 0) {
          const c = this.database.getAll(a, n), l = n.range ? n.range[0] : 0, u = n.range && n.range.length === 2 ? Math.min(
            c.length - 1 + l,
            n.range[1]
          ) : c.length - 1;
          return {
            status: c.length === o ? 200 : 206,
            body: c,
            headers: {
              "Content-Type": "application/json",
              "Content-Range": `items ${l}-${u}/${o}`
            }
          };
        }
        return {
          status: 200,
          body: [],
          headers: {
            "Content-Type": "application/json",
            "Content-Range": "items */0"
          }
        };
      }
      if (e.method === "POST") {
        if (e.requestBody == null)
          return {
            status: 400,
            headers: {}
          };
        const o = this.database.addOne(
          a,
          e.requestBody
        ), c = `${this.baseUrl}/${a}/${o[this.database.getCollection(a).identifierName]}`;
        return {
          status: 201,
          body: o,
          headers: {
            "Content-Type": "application/json",
            Location: c
          }
        };
      }
    }
    return {
      status: 404,
      headers: {}
    };
  }
  addMiddleware(e) {
    this.middlewares.push(e);
  }
  addCollection(e, r) {
    this.database.addCollection(e, r);
  }
  getCollection(e) {
    return this.database.getCollection(e);
  }
  getCollectionNames() {
    return this.database.getCollectionNames();
  }
  addSingle(e, r) {
    this.database.addSingle(e, r);
  }
  getSingle(e) {
    return this.database.getSingle(e);
  }
  getSingleNames() {
    return this.database.getSingleNames();
  }
}
function Ft(t) {
  if (!t)
    return {};
  const e = {};
  return t.split("&").map((a) => {
    if (a.indexOf("=") === -1)
      e[a] = !0;
    else {
      let [n, s] = a.split("=");
      (s.indexOf("[") === 0 || s.indexOf("{") === 0) && (s = JSON.parse(s)), e[n.trim()] = s;
    }
  }), e;
}
class Bt {
  constructor({
    loggingEnabled: e = !1,
    server: r,
    ...a
  } = {}) {
    p(this, "loggingEnabled", !1);
    p(this, "server");
    this.server = r || new _e(a), this.loggingEnabled = e;
  }
  getHandler() {
    return async (e) => {
      e.readyState = 4;
      const r = this.getNormalizedRequest(e), a = await this.server.handle(r);
      this.respond(a, e);
    };
  }
  getNormalizedRequest(e) {
    const r = typeof e == "string" ? new Request(e) : e, a = r.url ? decodeURIComponent(r.url.slice(r.url.indexOf("?") + 1)) : "", n = Ft(a);
    let s;
    if (r.requestBody)
      try {
        s = JSON.parse(
          r.requestBody
        );
      } catch {
      }
    return {
      url: r.url,
      headers: new Headers(e.requestHeaders),
      params: n,
      requestBody: s,
      method: r.method
    };
  }
  respond(e, r) {
    const a = {
      status: e.status,
      body: e.body ?? "",
      headers: e.headers ?? {}
    };
    Array.isArray(a.headers) ? a.headers.find((n) => n.name.toLowerCase() === "content-type") || a.headers.push({
      name: "Content-Type",
      value: "application/json"
    }) : a.headers["Content-Type"] || (a.headers["Content-Type"] = "application/json"), r.readyState = 1, r.respond(
      a.status,
      a.headers,
      JSON.stringify(a.body)
    ), this.log(r, a);
  }
  log(e, r) {
    this.loggingEnabled && (console.group ? (console.groupCollapsed(e.method, e.url, "(FakeRest)"), console.group("request"), console.log(e.method, e.url), console.log("headers", e.requestHeaders), console.log("body   ", e.requestBody), console.groupEnd(), console.group("response", r.status), console.log("headers", r.headers), console.log("body   ", r.body), console.groupEnd(), console.groupEnd()) : (console.log(
      "FakeRest request ",
      e.method,
      e.url,
      "headers",
      e.requestHeaders,
      "body",
      e.requestBody
    ), console.log(
      "FakeRest response",
      r.status,
      "headers",
      r.headers,
      "body",
      r.body
    )));
  }
  toggleLogging() {
    this.loggingEnabled = !this.loggingEnabled;
  }
}
const zd = (t) => new Bt(t).getHandler(), Vd = Bt;
class Ut {
  constructor({
    loggingEnabled: e = !1,
    server: r,
    ...a
  } = {}) {
    p(this, "loggingEnabled", !1);
    p(this, "server");
    this.server = r || new _e(a), this.loggingEnabled = e;
  }
  getHandler() {
    return async (r, a) => {
      const n = new Request(r, a), s = await this.getNormalizedRequest(n), i = await this.server.handle(s);
      return this.log(n, i, s), i;
    };
  }
  async getNormalizedRequest(e) {
    const r = typeof e == "string" ? new Request(e) : e, a = r.url ? decodeURIComponent(r.url.slice(r.url.indexOf("?") + 1)) : "", n = Ft(a), s = await r.text();
    let i;
    try {
      i = JSON.parse(s);
    } catch {
    }
    return {
      url: r.url,
      headers: r.headers,
      params: n,
      requestBody: i,
      method: r.method
    };
  }
  log(e, r, a) {
    this.loggingEnabled && (console.group ? (console.groupCollapsed(
      a.method,
      a.url,
      "(FakeRest)"
    ), console.group("request"), console.log(a.method, a.url), console.log("headers", e.headers), console.log("body   ", e.requestJson), console.groupEnd(), console.group("response", r.status), console.log("headers", r.headers), console.log("body   ", r.body), console.groupEnd(), console.groupEnd()) : (console.log(
      "FakeRest request ",
      a.method,
      a.url,
      "headers",
      e.headers,
      "body",
      e.requestJson
    ), console.log(
      "FakeRest response",
      r.status,
      "headers",
      r.headers,
      "body",
      r.body
    )));
  }
  toggleLogging() {
    this.loggingEnabled = !this.loggingEnabled;
  }
}
const Jd = (t) => new Ut(t).getHandler(), Qd = Ut;
class Hd {
  constructor({ server: e, ...r }) {
    p(this, "server");
    this.server = e || new _e(r);
  }
  getHandler() {
    return async ({ request: e }) => {
      const r = await this.getNormalizedRequest(e), a = await this.server.handle(r);
      return new Response(JSON.stringify(a.body), {
        status: a.status,
        headers: a.headers
      });
    };
  }
  async getNormalizedRequest(e) {
    const r = new URL(e.url), a = Object.fromEntries(
      Array.from(new URLSearchParams(r.search).entries()).map(
        ([s, i]) => [s, JSON.parse(i)]
      )
    );
    let n;
    try {
      const s = await e.text();
      n = JSON.parse(s);
    } catch {
    }
    return {
      url: e.url,
      headers: e.headers,
      params: a,
      requestBody: n,
      method: e.method
    };
  }
}
const Wd = (t) => new Hd(t).getHandler(), Xd = (t) => (e, r) => new Promise((a) => {
  setTimeout(() => {
    a(r(e));
  }, t);
});
export {
  ot as Collection,
  Kd as Database,
  Ut as FetchMockAdapter,
  Qd as FetchServer,
  Hd as MswAdapter,
  Vd as Server,
  _e as SimpleRestServer,
  Gd as Single,
  Bt as SinonAdapter,
  Jd as getFetchMockHandler,
  Wd as getMswHandler,
  zd as getSinonHandler,
  Xd as withDelay
};
//# sourceMappingURL=fakerest.min.js.map
