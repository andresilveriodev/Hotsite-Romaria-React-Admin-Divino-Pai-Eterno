{
  "version": 3,
  "sources": ["../../fakerest/node_modules/lodash/isArray.js", "../../fakerest/node_modules/lodash/_freeGlobal.js", "../../fakerest/node_modules/lodash/_root.js", "../../fakerest/node_modules/lodash/_Symbol.js", "../../fakerest/node_modules/lodash/_getRawTag.js", "../../fakerest/node_modules/lodash/_objectToString.js", "../../fakerest/node_modules/lodash/_baseGetTag.js", "../../fakerest/node_modules/lodash/isObjectLike.js", "../../fakerest/node_modules/lodash/isSymbol.js", "../../fakerest/node_modules/lodash/_isKey.js", "../../fakerest/node_modules/lodash/isObject.js", "../../fakerest/node_modules/lodash/isFunction.js", "../../fakerest/node_modules/lodash/_coreJsData.js", "../../fakerest/node_modules/lodash/_isMasked.js", "../../fakerest/node_modules/lodash/_toSource.js", "../../fakerest/node_modules/lodash/_baseIsNative.js", "../../fakerest/node_modules/lodash/_getValue.js", "../../fakerest/node_modules/lodash/_getNative.js", "../../fakerest/node_modules/lodash/_nativeCreate.js", "../../fakerest/node_modules/lodash/_hashClear.js", "../../fakerest/node_modules/lodash/_hashDelete.js", "../../fakerest/node_modules/lodash/_hashGet.js", "../../fakerest/node_modules/lodash/_hashHas.js", "../../fakerest/node_modules/lodash/_hashSet.js", "../../fakerest/node_modules/lodash/_Hash.js", "../../fakerest/node_modules/lodash/_listCacheClear.js", "../../fakerest/node_modules/lodash/eq.js", "../../fakerest/node_modules/lodash/_assocIndexOf.js", "../../fakerest/node_modules/lodash/_listCacheDelete.js", "../../fakerest/node_modules/lodash/_listCacheGet.js", "../../fakerest/node_modules/lodash/_listCacheHas.js", "../../fakerest/node_modules/lodash/_listCacheSet.js", "../../fakerest/node_modules/lodash/_ListCache.js", "../../fakerest/node_modules/lodash/_Map.js", "../../fakerest/node_modules/lodash/_mapCacheClear.js", "../../fakerest/node_modules/lodash/_isKeyable.js", "../../fakerest/node_modules/lodash/_getMapData.js", "../../fakerest/node_modules/lodash/_mapCacheDelete.js", "../../fakerest/node_modules/lodash/_mapCacheGet.js", "../../fakerest/node_modules/lodash/_mapCacheHas.js", "../../fakerest/node_modules/lodash/_mapCacheSet.js", "../../fakerest/node_modules/lodash/_MapCache.js", "../../fakerest/node_modules/lodash/memoize.js", "../../fakerest/node_modules/lodash/_memoizeCapped.js", "../../fakerest/node_modules/lodash/_stringToPath.js", "../../fakerest/node_modules/lodash/_arrayMap.js", "../../fakerest/node_modules/lodash/_baseToString.js", "../../fakerest/node_modules/lodash/toString.js", "../../fakerest/node_modules/lodash/_castPath.js", "../../fakerest/node_modules/lodash/_toKey.js", "../../fakerest/node_modules/lodash/_baseGet.js", "../../fakerest/node_modules/lodash/get.js", "../../fakerest/node_modules/lodash/_stackClear.js", "../../fakerest/node_modules/lodash/_stackDelete.js", "../../fakerest/node_modules/lodash/_stackGet.js", "../../fakerest/node_modules/lodash/_stackHas.js", "../../fakerest/node_modules/lodash/_stackSet.js", "../../fakerest/node_modules/lodash/_Stack.js", "../../fakerest/node_modules/lodash/_arrayEach.js", "../../fakerest/node_modules/lodash/_defineProperty.js", "../../fakerest/node_modules/lodash/_baseAssignValue.js", "../../fakerest/node_modules/lodash/_assignValue.js", "../../fakerest/node_modules/lodash/_copyObject.js", "../../fakerest/node_modules/lodash/_baseTimes.js", "../../fakerest/node_modules/lodash/_baseIsArguments.js", "../../fakerest/node_modules/lodash/isArguments.js", "../../fakerest/node_modules/lodash/stubFalse.js", "../../fakerest/node_modules/lodash/isBuffer.js", "../../fakerest/node_modules/lodash/_isIndex.js", "../../fakerest/node_modules/lodash/isLength.js", "../../fakerest/node_modules/lodash/_baseIsTypedArray.js", "../../fakerest/node_modules/lodash/_baseUnary.js", "../../fakerest/node_modules/lodash/_nodeUtil.js", "../../fakerest/node_modules/lodash/isTypedArray.js", "../../fakerest/node_modules/lodash/_arrayLikeKeys.js", "../../fakerest/node_modules/lodash/_isPrototype.js", "../../fakerest/node_modules/lodash/_overArg.js", "../../fakerest/node_modules/lodash/_nativeKeys.js", "../../fakerest/node_modules/lodash/_baseKeys.js", "../../fakerest/node_modules/lodash/isArrayLike.js", "../../fakerest/node_modules/lodash/keys.js", "../../fakerest/node_modules/lodash/_baseAssign.js", "../../fakerest/node_modules/lodash/_nativeKeysIn.js", "../../fakerest/node_modules/lodash/_baseKeysIn.js", "../../fakerest/node_modules/lodash/keysIn.js", "../../fakerest/node_modules/lodash/_baseAssignIn.js", "../../fakerest/node_modules/lodash/_cloneBuffer.js", "../../fakerest/node_modules/lodash/_copyArray.js", "../../fakerest/node_modules/lodash/_arrayFilter.js", "../../fakerest/node_modules/lodash/stubArray.js", "../../fakerest/node_modules/lodash/_getSymbols.js", "../../fakerest/node_modules/lodash/_copySymbols.js", "../../fakerest/node_modules/lodash/_arrayPush.js", "../../fakerest/node_modules/lodash/_getPrototype.js", "../../fakerest/node_modules/lodash/_getSymbolsIn.js", "../../fakerest/node_modules/lodash/_copySymbolsIn.js", "../../fakerest/node_modules/lodash/_baseGetAllKeys.js", "../../fakerest/node_modules/lodash/_getAllKeys.js", "../../fakerest/node_modules/lodash/_getAllKeysIn.js", "../../fakerest/node_modules/lodash/_DataView.js", "../../fakerest/node_modules/lodash/_Promise.js", "../../fakerest/node_modules/lodash/_Set.js", "../../fakerest/node_modules/lodash/_WeakMap.js", "../../fakerest/node_modules/lodash/_getTag.js", "../../fakerest/node_modules/lodash/_initCloneArray.js", "../../fakerest/node_modules/lodash/_Uint8Array.js", "../../fakerest/node_modules/lodash/_cloneArrayBuffer.js", "../../fakerest/node_modules/lodash/_cloneDataView.js", "../../fakerest/node_modules/lodash/_cloneRegExp.js", "../../fakerest/node_modules/lodash/_cloneSymbol.js", "../../fakerest/node_modules/lodash/_cloneTypedArray.js", "../../fakerest/node_modules/lodash/_initCloneByTag.js", "../../fakerest/node_modules/lodash/_baseCreate.js", "../../fakerest/node_modules/lodash/_initCloneObject.js", "../../fakerest/node_modules/lodash/_baseIsMap.js", "../../fakerest/node_modules/lodash/isMap.js", "../../fakerest/node_modules/lodash/_baseIsSet.js", "../../fakerest/node_modules/lodash/isSet.js", "../../fakerest/node_modules/lodash/_baseClone.js", "../../fakerest/node_modules/lodash/_setCacheAdd.js", "../../fakerest/node_modules/lodash/_setCacheHas.js", "../../fakerest/node_modules/lodash/_SetCache.js", "../../fakerest/node_modules/lodash/_arraySome.js", "../../fakerest/node_modules/lodash/_cacheHas.js", "../../fakerest/node_modules/lodash/_equalArrays.js", "../../fakerest/node_modules/lodash/_mapToArray.js", "../../fakerest/node_modules/lodash/_setToArray.js", "../../fakerest/node_modules/lodash/_equalByTag.js", "../../fakerest/node_modules/lodash/_equalObjects.js", "../../fakerest/node_modules/lodash/_baseIsEqualDeep.js", "../../fakerest/node_modules/lodash/_baseIsEqual.js", "../../fakerest/node_modules/lodash/_baseIsMatch.js", "../../fakerest/node_modules/lodash/_isStrictComparable.js", "../../fakerest/node_modules/lodash/_getMatchData.js", "../../fakerest/node_modules/lodash/_matchesStrictComparable.js", "../../fakerest/node_modules/lodash/_baseMatches.js", "../../fakerest/node_modules/lodash/matches.js", "../../fakerest/src/Collection.ts", "../../fakerest/src/Single.ts", "../../fakerest/src/Database.ts", "../../fakerest/src/SimpleRestServer.ts", "../../fakerest/src/parseQueryString.ts", "../../fakerest/src/adapters/SinonAdapter.ts", "../../fakerest/src/adapters/FetchMockAdapter.ts", "../../fakerest/src/adapters/MswAdapter.ts", "../../fakerest/src/withDelay.ts", "../../ra-data-fakerest/src/index.ts"],
  "sourcesContent": ["/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n", "/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n", "var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n", "var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n", "var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n", "/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n", "var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n", "/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n", "var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n", "var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nmodule.exports = isKey;\n", "/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n", "var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n", "var root = require('./_root');\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n", "var coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n", "/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n", "var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n", "/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n", "var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n", "var getNative = require('./_getNative');\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nmodule.exports = nativeCreate;\n", "var nativeCreate = require('./_nativeCreate');\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;\n", "/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;\n", "var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;\n", "var nativeCreate = require('./_nativeCreate');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;\n", "var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;\n", "var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nmodule.exports = Hash;\n", "/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;\n", "/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n", "var eq = require('./eq');\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n", "var assocIndexOf = require('./_assocIndexOf');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;\n", "var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;\n", "var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;\n", "var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nmodule.exports = listCacheSet;\n", "var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nmodule.exports = ListCache;\n", "var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nmodule.exports = Map;\n", "var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nmodule.exports = mapCacheClear;\n", "/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nmodule.exports = isKeyable;\n", "var isKeyable = require('./_isKeyable');\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nmodule.exports = getMapData;\n", "var getMapData = require('./_getMapData');\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;\n", "var getMapData = require('./_getMapData');\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;\n", "var getMapData = require('./_getMapData');\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;\n", "var getMapData = require('./_getMapData');\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;\n", "var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nmodule.exports = MapCache;\n", "var MapCache = require('./_MapCache');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nmodule.exports = memoize;\n", "var memoize = require('./memoize');\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;\n", "var memoizeCapped = require('./_memoizeCapped');\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nmodule.exports = stringToPath;\n", "/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n", "var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n", "var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n", "var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;\n", "var isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toKey;\n", "var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nmodule.exports = baseGet;\n", "var baseGet = require('./_baseGet');\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n", "var ListCache = require('./_ListCache');\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nmodule.exports = stackClear;\n", "/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;\n", "/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;\n", "/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;\n", "var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;\n", "var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nmodule.exports = Stack;\n", "/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n", "var getNative = require('./_getNative');\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nmodule.exports = defineProperty;\n", "var defineProperty = require('./_defineProperty');\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;\n", "var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignValue;\n", "var assignValue = require('./_assignValue'),\n    baseAssignValue = require('./_baseAssignValue');\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nmodule.exports = copyObject;\n", "/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n", "var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n", "var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n", "/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n", "var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n", "/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n", "/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n", "var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n", "/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n", "var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n", "var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n", "var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;\n", "/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n", "/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n", "var overArg = require('./_overArg');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n", "var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeys;\n", "var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n", "var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;\n", "var copyObject = require('./_copyObject'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n", "/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = nativeKeysIn;\n", "var isObject = require('./isObject'),\n    isPrototype = require('./_isPrototype'),\n    nativeKeysIn = require('./_nativeKeysIn');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeysIn;\n", "var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeysIn = require('./_baseKeysIn'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nmodule.exports = keysIn;\n", "var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nmodule.exports = baseAssignIn;\n", "var root = require('./_root');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nmodule.exports = cloneBuffer;\n", "/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nmodule.exports = copyArray;\n", "/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayFilter;\n", "/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;\n", "var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nmodule.exports = getSymbols;\n", "var copyObject = require('./_copyObject'),\n    getSymbols = require('./_getSymbols');\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nmodule.exports = copySymbols;\n", "/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayPush;\n", "var overArg = require('./_overArg');\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nmodule.exports = getPrototype;\n", "var arrayPush = require('./_arrayPush'),\n    getPrototype = require('./_getPrototype'),\n    getSymbols = require('./_getSymbols'),\n    stubArray = require('./stubArray');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nmodule.exports = getSymbolsIn;\n", "var copyObject = require('./_copyObject'),\n    getSymbolsIn = require('./_getSymbolsIn');\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nmodule.exports = copySymbolsIn;\n", "var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;\n", "var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;\n", "var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbolsIn = require('./_getSymbolsIn'),\n    keysIn = require('./keysIn');\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nmodule.exports = getAllKeysIn;\n", "var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nmodule.exports = DataView;\n", "var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nmodule.exports = Promise;\n", "var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nmodule.exports = Set;\n", "var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nmodule.exports = WeakMap;\n", "var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nmodule.exports = getTag;\n", "/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nmodule.exports = initCloneArray;\n", "var root = require('./_root');\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nmodule.exports = Uint8Array;\n", "var Uint8Array = require('./_Uint8Array');\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nmodule.exports = cloneArrayBuffer;\n", "var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nmodule.exports = cloneDataView;\n", "/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nmodule.exports = cloneRegExp;\n", "var Symbol = require('./_Symbol');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nmodule.exports = cloneSymbol;\n", "var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nmodule.exports = cloneTypedArray;\n", "var cloneArrayBuffer = require('./_cloneArrayBuffer'),\n    cloneDataView = require('./_cloneDataView'),\n    cloneRegExp = require('./_cloneRegExp'),\n    cloneSymbol = require('./_cloneSymbol'),\n    cloneTypedArray = require('./_cloneTypedArray');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nmodule.exports = initCloneByTag;\n", "var isObject = require('./isObject');\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nmodule.exports = baseCreate;\n", "var baseCreate = require('./_baseCreate'),\n    getPrototype = require('./_getPrototype'),\n    isPrototype = require('./_isPrototype');\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nmodule.exports = initCloneObject;\n", "var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nmodule.exports = baseIsMap;\n", "var baseIsMap = require('./_baseIsMap'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nmodule.exports = isMap;\n", "var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nmodule.exports = baseIsSet;\n", "var baseIsSet = require('./_baseIsSet'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nmodule.exports = isSet;\n", "var Stack = require('./_Stack'),\n    arrayEach = require('./_arrayEach'),\n    assignValue = require('./_assignValue'),\n    baseAssign = require('./_baseAssign'),\n    baseAssignIn = require('./_baseAssignIn'),\n    cloneBuffer = require('./_cloneBuffer'),\n    copyArray = require('./_copyArray'),\n    copySymbols = require('./_copySymbols'),\n    copySymbolsIn = require('./_copySymbolsIn'),\n    getAllKeys = require('./_getAllKeys'),\n    getAllKeysIn = require('./_getAllKeysIn'),\n    getTag = require('./_getTag'),\n    initCloneArray = require('./_initCloneArray'),\n    initCloneByTag = require('./_initCloneByTag'),\n    initCloneObject = require('./_initCloneObject'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isMap = require('./isMap'),\n    isObject = require('./isObject'),\n    isSet = require('./isSet'),\n    keys = require('./keys'),\n    keysIn = require('./keysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nmodule.exports = baseClone;\n", "/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nmodule.exports = setCacheAdd;\n", "/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;\n", "var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nmodule.exports = SetCache;\n", "/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arraySome;\n", "/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;\n", "var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Check that cyclic values are equal.\n  var arrStacked = stack.get(array);\n  var othStacked = stack.get(other);\n  if (arrStacked && othStacked) {\n    return arrStacked == other && othStacked == array;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;\n", "/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;\n", "/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;\n", "var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\nmodule.exports = equalByTag;\n", "var getAllKeys = require('./_getAllKeys');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Check that cyclic values are equal.\n  var objStacked = stack.get(object);\n  var othStacked = stack.get(other);\n  if (objStacked && othStacked) {\n    return objStacked == other && othStacked == object;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;\n", "var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;\n", "var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;\n", "var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nmodule.exports = baseIsMatch;\n", "var isObject = require('./isObject');\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;\n", "var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\nmodule.exports = getMatchData;\n", "/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\nmodule.exports = matchesStrictComparable;\n", "var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;\n", "var baseClone = require('./_baseClone'),\n    baseMatches = require('./_baseMatches');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1;\n\n/**\n * Creates a function that performs a partial deep comparison between a given\n * object and `source`, returning `true` if the given object has equivalent\n * property values, else `false`.\n *\n * **Note:** The created function is equivalent to `_.isMatch` with `source`\n * partially applied.\n *\n * Partial comparisons will match empty array and empty object `source`\n * values against any array or object value, respectively. See `_.isEqual`\n * for a list of supported value comparisons.\n *\n * **Note:** Multiple values can be checked by combining several matchers\n * using `_.overSome`\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Util\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n * @example\n *\n * var objects = [\n *   { 'a': 1, 'b': 2, 'c': 3 },\n *   { 'a': 4, 'b': 5, 'c': 6 }\n * ];\n *\n * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n *\n * // Checking for several possible values\n * _.filter(objects, _.overSome([_.matches({ 'a': 1 }), _.matches({ 'a': 4 })]));\n * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]\n */\nfunction matches(source) {\n  return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n}\n\nmodule.exports = matches;\n", "import get from 'lodash/get.js';\nimport matches from 'lodash/matches.js';\nimport type { Database } from './Database.ts';\nimport type {\n    CollectionItem,\n    Embed,\n    Filter,\n    Predicate,\n    Query,\n    Range,\n    Sort,\n} from './types.js';\n\nexport class Collection<T extends CollectionItem = CollectionItem> {\n    sequence = 0;\n    items: T[] = [];\n    database: Database | null = null;\n    name: string | null = null;\n    identifierName = 'id';\n    getNewId: () => number | string;\n\n    constructor({\n        items = [],\n        identifierName = 'id',\n        getNewId,\n    }: {\n        items?: T[];\n        identifierName?: string;\n        getNewId?: () => number | string;\n    } = {}) {\n        if (!Array.isArray(items)) {\n            throw new Error(\n                \"Can't initialize a Collection with anything else than an array of items\",\n            );\n        }\n        this.identifierName = identifierName;\n        this.getNewId = getNewId || this.getNewIdFromSequence;\n        items.map(this.addOne.bind(this));\n    }\n\n    /**\n     * A Collection may need to access other collections (e.g. for embedding references)\n     * This is done through a reference to the parent database.\n     */\n    setDatabase(database: Database) {\n        this.database = database;\n    }\n\n    setName(name: string) {\n        this.name = name;\n    }\n\n    /**\n     * Get a one to many embedder function for a given resource name\n     *\n     * @example embed posts for an author\n     *\n     *     authorsCollection._oneToManyEmbedder('posts')\n     *\n     * @returns Function item => item\n     */\n    _oneToManyEmbedder(resourceName: string) {\n        if (this.name == null) {\n            throw new Error(\"Can't embed references without a collection name\");\n        }\n        const singularResourceName = this.name.slice(0, -1);\n        const referenceName = `${singularResourceName}_id`;\n        return (item: T) => {\n            if (this.database == null) {\n                throw new Error(\"Can't embed references without a database\");\n            }\n            const otherCollection = this.database.collections[resourceName];\n            if (!otherCollection)\n                throw new Error(\n                    `Can't embed a non-existing collection ${resourceName}`,\n                );\n            if (Array.isArray(item[resourceName])) {\n                // the many to one relationship is carried by an array of ids, e.g. { posts: [1, 2] } in authors\n                // @ts-expect-error - For some reason, TS does not accept writing a generic types with the index signature\n                item[resourceName] = otherCollection.getAll({\n                    filter: (i: T) =>\n                        item[resourceName].indexOf(\n                            i[otherCollection.identifierName],\n                        ) !== -1,\n                });\n            } else {\n                // the many to one relationship is carried by references in the related collection, e.g. { author_id: 1 } in posts\n                // @ts-expect-error - For some reason, TS does not accept writing a generic types with the index signature\n                item[resourceName] = otherCollection.getAll({\n                    filter: (i: T) =>\n                        i[referenceName] === item[this.identifierName],\n                });\n            }\n            return item;\n        };\n    }\n\n    /**\n     * Get a many to one embedder function for a given resource name\n     *\n     * @example embed author for a post\n     *\n     *     postsCollection._manyToOneEmbedder('author')\n     *\n     * @returns Function item => item\n     */\n    _manyToOneEmbedder(resourceName: string) {\n        const pluralResourceName = `${resourceName}s`;\n        const referenceName = `${resourceName}_id`;\n        return (item: T) => {\n            if (this.database == null) {\n                throw new Error(\"Can't embed references without a database\");\n            }\n            const otherCollection =\n                this.database.collections[pluralResourceName];\n            if (!otherCollection)\n                throw new Error(\n                    `Can't embed a non-existing collection ${resourceName}`,\n                );\n            try {\n                // @ts-expect-error - For some reason, TS does not accept writing a generic types with the index signature\n                item[resourceName] = otherCollection.getOne(\n                    item[referenceName],\n                );\n            } catch (e) {\n                // resource doesn't exist in the related collection - do not embed\n            }\n            return item;\n        };\n    }\n\n    /**\n     * @param String[] An array of resource names, e.g. ['books', 'country']\n     * @returns Function item => item\n     */\n    _itemEmbedder(embed: Embed) {\n        const resourceNames = Array.isArray(embed) ? embed : [embed];\n        const resourceEmbedders = resourceNames.map((resourceName) =>\n            resourceName.endsWith('s')\n                ? this._oneToManyEmbedder(resourceName)\n                : this._manyToOneEmbedder(resourceName),\n        );\n        return (item: T) =>\n            resourceEmbedders.reduce(\n                (itemWithEmbeds, embedder) => embedder(itemWithEmbeds),\n                item,\n            );\n    }\n\n    getCount(query?: Query) {\n        return this.getAll(query).length;\n    }\n\n    getAll(query?: Query) {\n        let items = this.items.slice(0); // clone the array to avoid updating the core one\n        if (query) {\n            if (query.filter) {\n                items = filterItems(items, query.filter);\n            }\n            if (query.sort) {\n                items = sortItems(items, query.sort);\n            }\n            if (query.range) {\n                items = rangeItems(items, query.range);\n            }\n            items = items.map((item) => Object.assign({}, item)); // clone item to avoid returning the original\n            if (query.embed && this.database) {\n                items = items.map(this._itemEmbedder(query.embed)); // embed reference\n            }\n        }\n        return items;\n    }\n\n    getIndex(identifier: number | string) {\n        return this.items.findIndex(\n            // biome-ignore lint/suspicious/noDoubleEquals: we want implicit type coercion\n            (item) => item[this.identifierName] == identifier,\n        );\n    }\n\n    getOne(identifier: number | string, query?: Query) {\n        const index = this.getIndex(identifier);\n        if (index === -1) {\n            throw new Error(`No item with identifier ${identifier}`);\n        }\n        let item = this.items[index];\n        item = Object.assign({}, item); // clone item to avoid returning the original\n        if (query?.embed && this.database) {\n            item = this._itemEmbedder(query.embed)(item); // embed reference\n        }\n        return item;\n    }\n\n    getNewIdFromSequence() {\n        return this.sequence++;\n    }\n\n    addOne(item: T) {\n        const identifier = item[this.identifierName];\n        if (identifier != null) {\n            if (this.getIndex(identifier) !== -1) {\n                throw new Error(\n                    `An item with the identifier ${identifier} already exists`,\n                );\n            }\n            if (typeof identifier === 'number') {\n                this.sequence = Math.max(this.sequence, identifier) + 1;\n            }\n        } else {\n            // @ts-expect-error - For some reason, TS does not accept writing a generic types with the index signature\n            item[this.identifierName] = this.getNewId();\n        }\n        this.items.push(item);\n        return Object.assign({}, item); // clone item to avoid returning the original;\n    }\n\n    updateOne(identifier: number | string, item: T) {\n        const index = this.getIndex(identifier);\n        if (index === -1) {\n            throw new Error(`No item with identifier ${identifier}`);\n        }\n        for (const key in item) {\n            this.items[index][key] = item[key];\n        }\n        return Object.assign({}, this.items[index]); // clone item to avoid returning the original\n    }\n\n    removeOne(identifier: number | string) {\n        const index = this.getIndex(identifier);\n        if (index === -1) {\n            throw new Error(`No item with identifier ${identifier}`);\n        }\n        const item = this.items[index];\n        this.items.splice(index, 1);\n        // biome-ignore lint/suspicious/noDoubleEquals: we want implicit type coercion\n        if (typeof identifier === 'number' && identifier == this.sequence - 1) {\n            this.sequence--;\n        }\n        return item;\n    }\n}\n\nconst every = <T extends CollectionItem = CollectionItem>(\n    array: T[],\n    predicate: Predicate,\n) => array.reduce((acc, value) => acc && predicate(value), true);\n\nconst some = <T extends CollectionItem = CollectionItem>(\n    array: T[],\n    predicate: Predicate,\n) => array.reduce((acc, value) => acc || predicate(value), false);\n\nconst getArrayOfObjectsPaths = <T extends CollectionItem = CollectionItem>(\n    keyParts: string[],\n    item: T,\n) =>\n    keyParts.reduce(\n        (acc, key, index) => {\n            // If we already found an array, we don't need to explore further\n            // For example with path `tags.name` when tags is an array of objects\n            if (acc != null) {\n                return acc;\n            }\n\n            const keyToArray = keyParts.slice(0, index + 1).join('.');\n            const keyToItem = keyParts.slice(index + 1).join('.');\n            const itemValue = get(item, keyToArray);\n\n            // If the array is at the end of the key path, we will process it like we do normally with arrays\n            // For example with path `deep.tags` where tags is the array. In this case, we return undefined\n            return Array.isArray(itemValue) && index < keyParts.length - 1\n                ? [keyToArray, keyToItem]\n                : undefined;\n        },\n        undefined as Array<string> | undefined,\n    );\n\nconst getSimpleFilter = (key: string, value: any) => {\n    if (key.indexOf('_q') !== -1) {\n        // text search\n        const realKey = key.replace(/(_q)$/, '');\n        const regex = new RegExp(value.toString(), 'i');\n\n        return <T extends CollectionItem = CollectionItem>(item: T) =>\n            get(item, realKey)?.toString().match(regex) !== null;\n    }\n    if (key.indexOf('_lte') !== -1) {\n        // less than or equal\n        const realKey = key.replace(/(_lte)$/, '');\n        return <T extends CollectionItem = CollectionItem>(item: T) =>\n            get(item, realKey) <= value;\n    }\n    if (key.indexOf('_gte') !== -1) {\n        // less than or equal\n        const realKey = key.replace(/(_gte)$/, '');\n        return <T extends CollectionItem = CollectionItem>(item: T) =>\n            get(item, realKey) >= value;\n    }\n    if (key.indexOf('_lt') !== -1) {\n        // less than or equal\n        const realKey = key.replace(/(_lt)$/, '');\n        return <T extends CollectionItem = CollectionItem>(item: T) =>\n            get(item, realKey) < value;\n    }\n    if (key.indexOf('_gt') !== -1) {\n        // less than or equal\n        const realKey = key.replace(/(_gt)$/, '');\n        return <T extends CollectionItem = CollectionItem>(item: T) =>\n            get(item, realKey) > value;\n    }\n    if (key.indexOf('_neq_any') !== -1) {\n        // not equal to any\n        const realKey = key.replace(/(_neq_any)$/, '');\n        const finalValue = Array.isArray(value) ? value : [value];\n        return <T extends CollectionItem = CollectionItem>(\n            item: T,\n            // biome-ignore lint/suspicious/noDoubleEquals: we want implicit type coercion\n        ) => finalValue.every((val) => get(item, realKey) != val);\n    }\n    if (key.indexOf('_neq') !== -1) {\n        // not equal\n        const realKey = key.replace(/(_neq)$/, '');\n        return <T extends CollectionItem = CollectionItem>(\n            item: T,\n            // biome-ignore lint/suspicious/noDoubleEquals: we want implicit type coercion\n        ) => get(item, realKey) != value;\n    }\n    if (key.indexOf('_eq_any') !== -1) {\n        // equal any\n        const realKey = key.replace(/(_eq_any)$/, '');\n        const finalValue = Array.isArray(value) ? value : [value];\n        return <T extends CollectionItem = CollectionItem>(\n            item: T,\n            // biome-ignore lint/suspicious/noDoubleEquals: we want implicit type coercion\n        ) => finalValue.some((val) => get(item, realKey) == val);\n    }\n    if (key.indexOf('_eq') !== -1) {\n        // equal\n        const realKey = key.replace(/(_eq)$/, '');\n        return <T extends CollectionItem = CollectionItem>(\n            item: T,\n            // biome-ignore lint/suspicious/noDoubleEquals: we want implicit type coercion\n        ) => get(item, realKey) == value;\n    }\n    if (key.indexOf('_inc_any') !== -1) {\n        // include any\n        const realKey = key.replace(/(_inc_any)$/, '');\n        const finalValue = Array.isArray(value) ? value : [value];\n        return <T extends CollectionItem = CollectionItem>(item: T) =>\n            finalValue.some((val) => {\n                const itemValue = get(item, realKey);\n                if (Array.isArray(itemValue)) {\n                    return itemValue.includes(val);\n                }\n                if (typeof itemValue === 'string') {\n                    return itemValue.includes(val);\n                }\n                return false;\n            });\n    }\n    if (key.indexOf('_inc') !== -1) {\n        // includes all\n        const realKey = key.replace(/(_inc)$/, '');\n        const finalValue = Array.isArray(value) ? value : [value];\n        return <T extends CollectionItem = CollectionItem>(item: T) =>\n            finalValue.every((val) => {\n                const itemValue = get(item, realKey);\n                if (Array.isArray(itemValue)) {\n                    return itemValue.includes(val);\n                }\n                if (typeof itemValue === 'string') {\n                    return itemValue.includes(val);\n                }\n                return false;\n            });\n    }\n    if (key.indexOf('_ninc_any') !== -1) {\n        // does not include any\n        const realKey = key.replace(/(_ninc_any)$/, '');\n        const finalValue = Array.isArray(value) ? value : [value];\n        return <T extends CollectionItem = CollectionItem>(item: T) =>\n            finalValue.every((val) => {\n                const itemValue = get(item, realKey);\n                if (Array.isArray(itemValue)) {\n                    return !itemValue.includes(val);\n                }\n                if (typeof itemValue === 'string') {\n                    return !itemValue.includes(val);\n                }\n                return false;\n            });\n    }\n    if (Array.isArray(value)) {\n        return <T extends CollectionItem = CollectionItem>(item: T) => {\n            if (Array.isArray(get(item, key))) {\n                // array filter and array item value: where all items in values\n                return every(value, (v) => {\n                    const itemValue = get(item, key);\n                    if (Array.isArray(itemValue)) {\n                        // biome-ignore lint/suspicious/noDoubleEquals: we want implicit type coercion\n                        return some(itemValue, (itemValue) => itemValue == v);\n                    }\n                    return false;\n                });\n            }\n            // where item in values\n            // biome-ignore lint/suspicious/noDoubleEquals: we want implicit type coercion\n            return value.filter((v) => v == get(item, key)).length > 0;\n        };\n    }\n\n    if (typeof value === 'object') {\n        return <T extends CollectionItem = CollectionItem>(item: T) =>\n            matches(value)(get(item, key));\n    }\n\n    return <T extends CollectionItem = CollectionItem>(item: T) => {\n        const itemValue = get(item, key);\n        if (Array.isArray(itemValue) && typeof value === 'string') {\n            // simple filter but array item value: where value in item\n            return itemValue.indexOf(value) !== -1;\n        }\n        if (typeof itemValue === 'boolean' && typeof value === 'string') {\n            // simple filter but boolean item value: boolean where\n            return itemValue === (value === 'true');\n        }\n        // simple filter\n        // biome-ignore lint/suspicious/noDoubleEquals: we want implicit type coercion\n        return itemValue == value;\n    };\n};\n\nfunction filterItems<T extends CollectionItem = CollectionItem>(\n    items: T[],\n    filter: Filter,\n) {\n    if (typeof filter === 'function') {\n        return items.filter(filter);\n    }\n    if (filter instanceof Object) {\n        // turn filter properties to functions\n        const filterFunctions = Object.keys(filter).map((key) => {\n            if (key === 'q' && typeof filter.q === 'string') {\n                const regex = buildRegexSearch(filter.q);\n\n                const filterWithQuery = <\n                    T2 extends CollectionItem = CollectionItem,\n                >(\n                    item: T2,\n                ) => {\n                    for (const itemKey in item) {\n                        const itemValue = item[itemKey];\n                        if (typeof itemValue === 'object') {\n                            if (filterWithQuery(itemValue as CollectionItem)) {\n                                return true;\n                            }\n                        }\n\n                        if (\n                            itemValue &&\n                            typeof itemValue === 'string' &&\n                            itemValue.match &&\n                            itemValue.match(regex) !== null\n                        )\n                            return true;\n                    }\n                    return false;\n                };\n                // full-text filter\n                return filterWithQuery;\n            }\n\n            const keyParts = key.split('.');\n            const value = filter[key];\n            if (keyParts.length > 1) {\n                return <T2 extends CollectionItem = CollectionItem>(\n                    item: T2,\n                ): boolean => {\n                    const arrayOfObjectsPaths = getArrayOfObjectsPaths(\n                        keyParts,\n                        item,\n                    );\n\n                    if (arrayOfObjectsPaths) {\n                        const [arrayPath, valuePath] = arrayOfObjectsPaths;\n                        const itemValue = get(item, arrayPath);\n                        if (Array.isArray(itemValue)) {\n                            // Check wether any item in the array matches the filter\n                            const filteredArrayItems = filterItems(itemValue, {\n                                [valuePath]: value,\n                            });\n                            return filteredArrayItems.length > 0;\n                        }\n                        return false;\n                    }\n                    return getSimpleFilter(key, value)(item);\n                };\n            }\n\n            return getSimpleFilter(key, value);\n        });\n        // only the items matching all filters functions are in (AND logic)\n        return items.filter((item) =>\n            filterFunctions.reduce(\n                (selected, filterFunction) => selected && filterFunction(item),\n                true,\n            ),\n        );\n    }\n    throw new Error('Unsupported filter type');\n}\n\nfunction sortItems<T extends CollectionItem = CollectionItem>(\n    items: T[],\n    sort: Sort,\n) {\n    if (typeof sort === 'function') {\n        return items.sort(sort);\n    }\n    if (typeof sort === 'string') {\n        return items.sort((a, b) => {\n            if (a[sort] > b[sort]) {\n                return 1;\n            }\n            if (a[sort] < b[sort]) {\n                return -1;\n            }\n            return 0;\n        });\n    }\n    if (Array.isArray(sort)) {\n        const key = sort[0];\n        const direction = sort[1].toLowerCase() === 'asc' ? 1 : -1;\n        return items.sort((a: T, b: T) => {\n            if (a[key] > b[key]) {\n                return direction;\n            }\n            if (a[key] < b[key]) {\n                return -1 * direction;\n            }\n            return 0;\n        });\n    }\n    throw new Error('Unsupported sort type');\n}\n\nfunction rangeItems<T extends CollectionItem = CollectionItem>(\n    items: T[],\n    range: Range,\n) {\n    if (Array.isArray(range)) {\n        return items.slice(\n            range[0],\n            range[1] !== undefined ? range[1] + 1 : undefined,\n        );\n    }\n    throw new Error('Unsupported range type');\n}\n\nfunction buildRegexSearch(input: string) {\n    // Trim the input to remove leading and trailing whitespace\n    const trimmedInput = input.trim();\n\n    // Escape special characters in the input to prevent regex injection\n    const escapedInput = trimmedInput.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n\n    // Split the input into words\n    const words = escapedInput.split(' ');\n\n    // Create a regex pattern to match any of the words\n    const pattern = words.map((word) => `(${word})`).join('|');\n\n    // Create a new RegExp object with the pattern, case insensitive\n    const regex = new RegExp(pattern, 'i');\n\n    return regex;\n}\n", "import type { Database } from './Database.ts';\nimport type { CollectionItem, Embed, Query } from './types.ts';\n\nexport class Single<T extends CollectionItem = CollectionItem> {\n    obj: T | null = null;\n    database: Database | null = null;\n    name: string | null = null;\n\n    constructor(obj: T) {\n        if (!(obj instanceof Object)) {\n            throw new Error(\n                \"Can't initialize a Single with anything except an object\",\n            );\n        }\n        this.obj = obj;\n    }\n\n    /**\n     * A Single may need to access other collections (e.g. for embedded\n     * references) This is done through a reference to the parent database.\n     */\n    setDatabase(database: Database) {\n        this.database = database;\n    }\n\n    setName(name: string) {\n        this.name = name;\n    }\n\n    // No need to embed Singles, since they are by their nature top-level\n    // No need to worry about remote references, (i.e. mysingleton_id=1) since\n    // it is by definition a singleton\n    _oneToManyEmbedder(resourceName: string) {\n        return (item: T) => {\n            if (this.database == null) {\n                throw new Error(\"Can't embed references without a database\");\n            }\n            const otherCollection = this.database.collections[resourceName];\n            if (!otherCollection)\n                throw new Error(\n                    `Can't embed a non-existing collection ${resourceName}`,\n                );\n            // We have an array of ids {posts: [1,2]} (back refs are not valid\n            // for singleton)\n            // @ts-expect-error - For some reason, TS does not accept writing a generic types with the index signature\n            item[resourceName] = otherCollection.getAll({\n                filter: (i: CollectionItem) =>\n                    item[resourceName].indexOf(\n                        i[otherCollection.identifierName],\n                    ) !== -1,\n            });\n            return item;\n        };\n    }\n\n    _manyToOneEmbedder(resourceName: string) {\n        const pluralResourceName = `${resourceName}s`;\n        const referenceName = `${resourceName}_id`;\n        return (item: T) => {\n            if (this.database == null) {\n                throw new Error(\"Can't embed references without a database\");\n            }\n            const otherCollection =\n                this.database.collections[pluralResourceName];\n            if (!otherCollection)\n                throw new Error(\n                    `Can't embed a non-existing collection ${resourceName}`,\n                );\n            try {\n                // @ts-expect-error - For some reason, TS does not accept writing a generic types with the index signature\n                item[resourceName] = otherCollection.getOne(\n                    item[referenceName],\n                );\n            } catch (e) {\n                // Resource doesn't exist, so don't embed\n            }\n            return item;\n        };\n    }\n\n    _itemEmbedder(embed: Embed) {\n        const resourceNames = Array.isArray(embed) ? embed : [embed];\n        const resourceEmbedders = resourceNames.map((resourceName) =>\n            resourceName.endsWith('s')\n                ? this._oneToManyEmbedder(resourceName)\n                : this._manyToOneEmbedder(resourceName),\n        );\n        return (item: T) =>\n            resourceEmbedders.reduce(\n                (itemWithEmbeds, embedder) => embedder(itemWithEmbeds),\n                item,\n            );\n    }\n\n    getOnly(query?: Query) {\n        let item = this.obj;\n        if (query?.embed && this.database) {\n            item = Object.assign({}, item); // Clone\n            item = this._itemEmbedder(query.embed)(item);\n        }\n        return item;\n    }\n\n    updateOnly(item: T) {\n        if (this.obj == null) {\n            throw new Error(\"Can't update a non-existing object\");\n        }\n\n        for (const key in item) {\n            this.obj[key] = item[key];\n        }\n        return this.obj;\n    }\n}\n", "import { Collection } from './Collection.ts';\nimport { Single } from './Single.ts';\nimport type { CollectionItem, Query, QueryFunction } from './types.ts';\n\nexport class Database {\n    identifierName = 'id';\n    collections: Record<string, Collection<any>> = {};\n    singles: Record<string, Single<any>> = {};\n    getNewId?: () => number | string;\n\n    constructor({\n        data,\n        identifierName = 'id',\n        getNewId,\n    }: DatabaseOptions = {}) {\n        this.getNewId = getNewId;\n        this.identifierName = identifierName;\n\n        if (data) {\n            this.init(data);\n        }\n    }\n\n    /**\n     * Shortcut for adding several collections if identifierName is always the same\n     */\n    init(data: Record<string, CollectionItem[] | CollectionItem>) {\n        for (const name in data) {\n            const value = data[name];\n            if (Array.isArray(value)) {\n                this.addCollection(\n                    name,\n                    new Collection({\n                        items: value,\n                        identifierName: this.identifierName,\n                        getNewId: this.getNewId,\n                    }),\n                );\n            } else {\n                this.addSingle(name, new Single(value));\n            }\n        }\n    }\n\n    addCollection<T extends CollectionItem = CollectionItem>(\n        name: string,\n        collection: Collection<T>,\n    ) {\n        this.collections[name] = collection;\n        collection.setDatabase(this);\n        collection.setName(name);\n    }\n\n    getCollection(name: string) {\n        return this.collections[name];\n    }\n\n    getCollectionNames() {\n        return Object.keys(this.collections);\n    }\n\n    addSingle<T extends CollectionItem = CollectionItem>(\n        name: string,\n        single: Single<T>,\n    ) {\n        this.singles[name] = single;\n        single.setDatabase(this);\n        single.setName(name);\n    }\n\n    getSingle(name: string) {\n        return this.singles[name];\n    }\n\n    getSingleNames() {\n        return Object.keys(this.singles);\n    }\n\n    /**\n     * @param {string} name\n     * @param {string} params As decoded from the query string, e.g. { sort: \"name\", filter: {enabled:true}, slice: [10, 20] }\n     */\n    getCount(name: string, params?: Query) {\n        return this.collections[name].getCount(params);\n    }\n\n    /**\n     * @param {string} name\n     * @param {string} params As decoded from the query string, e.g. { sort: \"name\", filter: {enabled:true}, slice: [10, 20] }\n     */\n    getAll(name: string, params?: Query) {\n        return this.collections[name].getAll(params);\n    }\n\n    getOne(name: string, identifier: string | number, params?: Query) {\n        return this.collections[name].getOne(identifier, params);\n    }\n\n    addOne(name: string, item: CollectionItem) {\n        if (!Object.prototype.hasOwnProperty.call(this.collections, name)) {\n            this.addCollection(\n                name,\n                new Collection({\n                    items: [],\n                    identifierName: this.identifierName,\n                    getNewId: this.getNewId,\n                }),\n            );\n        }\n        return this.collections[name].addOne(item);\n    }\n\n    updateOne(name: string, identifier: string | number, item: CollectionItem) {\n        return this.collections[name].updateOne(identifier, item);\n    }\n\n    removeOne(name: string, identifier: string | number) {\n        return this.collections[name].removeOne(identifier);\n    }\n\n    getOnly(name: string, params?: Query) {\n        return this.singles[name].getOnly();\n    }\n\n    updateOnly(name: string, item: CollectionItem) {\n        return this.singles[name].updateOnly(item);\n    }\n}\n\nexport type DatabaseOptions = {\n    baseUrl?: string;\n    batchUrl?: string | null;\n    data?: Record<string, CollectionItem[] | CollectionItem>;\n    defaultQuery?: QueryFunction;\n    identifierName?: string;\n    getNewId?: () => number | string;\n    loggingEnabled?: boolean;\n};\n", "import type { Collection } from './Collection.ts';\nimport { Database, type DatabaseOptions } from './Database.ts';\nimport type { Single } from './Single.ts';\nimport type {\n    APIServer,\n    BaseResponse,\n    FakeRestContext,\n    CollectionItem,\n    QueryFunction,\n    NormalizedRequest,\n} from './types.ts';\n\nexport class SimpleRestServer implements APIServer {\n    baseUrl = '';\n    defaultQuery: QueryFunction = () => ({});\n    middlewares: Array<Middleware>;\n    database: Database;\n\n    constructor({\n        baseUrl = '',\n        defaultQuery = () => ({}),\n        database,\n        middlewares,\n        ...options\n    }: BaseServerOptions = {}) {\n        this.baseUrl = baseUrl;\n        this.defaultQuery = defaultQuery;\n        this.middlewares = middlewares || [];\n\n        if (database) {\n            this.database = database;\n        } else {\n            this.database = new Database(options);\n        }\n    }\n\n    /**\n     * @param Function ResourceName => object\n     */\n    setDefaultQuery(query: QueryFunction) {\n        this.defaultQuery = query;\n    }\n\n    getContext(normalizedRequest: NormalizedRequest): FakeRestContext {\n        for (const name of this.database.getSingleNames()) {\n            const matches = normalizedRequest.url?.match(\n                new RegExp(`^${this.baseUrl}\\\\/(${name})(\\\\/?.*)?$`),\n            );\n            if (!matches) continue;\n            return {\n                ...normalizedRequest,\n                single: name,\n            };\n        }\n\n        const matches = normalizedRequest.url?.match(\n            new RegExp(\n                `^${this.baseUrl}\\\\/([^\\\\/?]+)(\\\\/(\\\\w+|\\\\d+))?(\\\\?.*)?$`,\n            ),\n        );\n        if (matches) {\n            const name = matches[1];\n            const params = Object.assign(\n                {},\n                this.defaultQuery(name),\n                normalizedRequest.params,\n            );\n\n            return {\n                ...normalizedRequest,\n                collection: name,\n                params,\n            };\n        }\n\n        return normalizedRequest;\n    }\n\n    async handle(normalizedRequest: NormalizedRequest): Promise<BaseResponse> {\n        const context = this.getContext(normalizedRequest);\n        // Call middlewares\n        let index = 0;\n        const middlewares = [...this.middlewares];\n\n        const next = (context: FakeRestContext) => {\n            const middleware = middlewares[index++];\n            if (middleware) {\n                return middleware(context, next);\n            }\n            return this.handleRequest(context);\n        };\n\n        try {\n            const response = await next(context);\n            return response;\n        } catch (error) {\n            if (error instanceof Error) {\n                throw error;\n            }\n\n            return error as BaseResponse;\n        }\n    }\n\n    handleRequest(context: FakeRestContext): BaseResponse {\n        // Handle Single Objects\n        for (const name of this.database.getSingleNames()) {\n            const matches = context.url?.match(\n                new RegExp(`^${this.baseUrl}\\\\/(${name})(\\\\/?.*)?$`),\n            );\n            if (!matches) continue;\n\n            if (context.method === 'GET') {\n                try {\n                    return {\n                        status: 200,\n                        body: this.database.getOnly(name),\n                        headers: {\n                            'Content-Type': 'application/json',\n                        },\n                    };\n                } catch (error) {\n                    return {\n                        status: 404,\n                        headers: {},\n                    };\n                }\n            }\n            if (context.method === 'PUT') {\n                try {\n                    if (context.requestBody == null) {\n                        return {\n                            status: 400,\n                            headers: {},\n                        };\n                    }\n                    return {\n                        status: 200,\n                        body: this.database.updateOnly(\n                            name,\n                            context.requestBody,\n                        ),\n                        headers: {\n                            'Content-Type': 'application/json',\n                        },\n                    };\n                } catch (error) {\n                    return {\n                        status: 404,\n                        headers: {},\n                    };\n                }\n            }\n            if (context.method === 'PATCH') {\n                try {\n                    if (context.requestBody == null) {\n                        return {\n                            status: 400,\n                            headers: {},\n                        };\n                    }\n                    return {\n                        status: 200,\n                        body: this.database.updateOnly(\n                            name,\n                            context.requestBody,\n                        ),\n                        headers: {\n                            'Content-Type': 'application/json',\n                        },\n                    };\n                } catch (error) {\n                    return {\n                        status: 404,\n                        headers: {},\n                    };\n                }\n            }\n        }\n\n        // handle collections\n        const matches = context.url?.match(\n            new RegExp(\n                `^${this.baseUrl}\\\\/([^\\\\/?]+)(\\\\/(\\\\w+|\\\\d+))?(\\\\?.*)?$`,\n            ),\n        );\n        if (!matches) {\n            return { status: 404, headers: {} };\n        }\n        const name = matches[1];\n        const params = Object.assign(\n            {},\n            this.defaultQuery(name),\n            context.params,\n        );\n        if (!matches[2]) {\n            if (context.method === 'GET') {\n                if (!this.database.getCollection(name)) {\n                    return { status: 404, headers: {} };\n                }\n                const count = this.database.getCount(\n                    name,\n                    params.filter ? { filter: params.filter } : {},\n                );\n                if (count > 0) {\n                    const items = this.database.getAll(name, params);\n                    const first = params.range ? params.range[0] : 0;\n                    const last =\n                        params.range && params.range.length === 2\n                            ? Math.min(\n                                  items.length - 1 + first,\n                                  params.range[1],\n                              )\n                            : items.length - 1;\n\n                    return {\n                        status: items.length === count ? 200 : 206,\n                        body: items,\n                        headers: {\n                            'Content-Type': 'application/json',\n                            'Content-Range': `items ${first}-${last}/${count}`,\n                        },\n                    };\n                }\n\n                return {\n                    status: 200,\n                    body: [],\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Content-Range': 'items */0',\n                    },\n                };\n            }\n            if (context.method === 'POST') {\n                if (context.requestBody == null) {\n                    return {\n                        status: 400,\n                        headers: {},\n                    };\n                }\n\n                const newResource = this.database.addOne(\n                    name,\n                    context.requestBody,\n                );\n                const newResourceURI = `${this.baseUrl}/${name}/${\n                    newResource[\n                        this.database.getCollection(name).identifierName\n                    ]\n                }`;\n\n                return {\n                    status: 201,\n                    body: newResource,\n                    headers: {\n                        'Content-Type': 'application/json',\n                        Location: newResourceURI,\n                    },\n                };\n            }\n        } else {\n            if (!this.database.getCollection(name)) {\n                return { status: 404, headers: {} };\n            }\n            const id = matches[3];\n            if (context.method === 'GET') {\n                try {\n                    return {\n                        status: 200,\n                        body: this.database.getOne(name, id, params),\n                        headers: {\n                            'Content-Type': 'application/json',\n                        },\n                    };\n                } catch (error) {\n                    return {\n                        status: 404,\n                        headers: {},\n                    };\n                }\n            }\n            if (context.method === 'PUT') {\n                try {\n                    if (context.requestBody == null) {\n                        return {\n                            status: 400,\n                            headers: {},\n                        };\n                    }\n                    return {\n                        status: 200,\n                        body: this.database.updateOne(\n                            name,\n                            id,\n                            context.requestBody,\n                        ),\n                        headers: {\n                            'Content-Type': 'application/json',\n                        },\n                    };\n                } catch (error) {\n                    return {\n                        status: 404,\n                        headers: {},\n                    };\n                }\n            }\n            if (context.method === 'PATCH') {\n                try {\n                    if (context.requestBody == null) {\n                        return {\n                            status: 400,\n                            headers: {},\n                        };\n                    }\n                    return {\n                        status: 200,\n                        body: this.database.updateOne(\n                            name,\n                            id,\n                            context.requestBody,\n                        ),\n                        headers: {\n                            'Content-Type': 'application/json',\n                        },\n                    };\n                } catch (error) {\n                    return {\n                        status: 404,\n                        headers: {},\n                    };\n                }\n            }\n            if (context.method === 'DELETE') {\n                try {\n                    return {\n                        status: 200,\n                        body: this.database.removeOne(name, id),\n                        headers: {\n                            'Content-Type': 'application/json',\n                        },\n                    };\n                } catch (error) {\n                    return {\n                        status: 404,\n                        headers: {},\n                    };\n                }\n            }\n        }\n        return {\n            status: 404,\n            headers: {},\n        };\n    }\n\n    addMiddleware(middleware: Middleware) {\n        this.middlewares.push(middleware);\n    }\n\n    addCollection<T extends CollectionItem = CollectionItem>(\n        name: string,\n        collection: Collection<T>,\n    ) {\n        this.database.addCollection(name, collection);\n    }\n\n    getCollection(name: string) {\n        return this.database.getCollection(name);\n    }\n\n    getCollectionNames() {\n        return this.database.getCollectionNames();\n    }\n\n    addSingle<T extends CollectionItem = CollectionItem>(\n        name: string,\n        single: Single<T>,\n    ) {\n        this.database.addSingle(name, single);\n    }\n\n    getSingle(name: string) {\n        return this.database.getSingle(name);\n    }\n\n    getSingleNames() {\n        return this.database.getSingleNames();\n    }\n}\n\nexport type Middleware = (\n    context: FakeRestContext,\n    next: (context: FakeRestContext) => Promise<BaseResponse> | BaseResponse,\n) => Promise<BaseResponse> | BaseResponse;\n\nexport type BaseServerOptions = DatabaseOptions & {\n    database?: Database;\n    baseUrl?: string;\n    batchUrl?: string | null;\n    defaultQuery?: QueryFunction;\n    middlewares?: Array<Middleware>;\n};\n", "export function parseQueryString(queryString: string) {\n    if (!queryString) {\n        return {};\n    }\n    const queryObject: Record<string, any> = {};\n    const queryElements = queryString.split('&');\n\n    queryElements.map((queryElement) => {\n        if (queryElement.indexOf('=') === -1) {\n            queryObject[queryElement] = true;\n        } else {\n            let [key, value] = queryElement.split('=');\n            if (value.indexOf('[') === 0 || value.indexOf('{') === 0) {\n                value = JSON.parse(value);\n            }\n            queryObject[key.trim()] = value;\n        }\n    });\n\n    return queryObject;\n}\n", "import type { SinonFakeXMLHttpRequest } from 'sinon';\nimport {\n    SimpleRestServer,\n    type BaseServerOptions,\n} from '../SimpleRestServer.ts';\nimport { parseQueryString } from '../parseQueryString.ts';\nimport type { BaseResponse, APIServer, NormalizedRequest } from '../types.ts';\n\nexport class SinonAdapter {\n    loggingEnabled = false;\n    server: APIServer;\n\n    constructor({\n        loggingEnabled = false,\n        server,\n        ...options\n    }: SinonAdapterOptions = {}) {\n        this.server = server || new SimpleRestServer(options);\n        this.loggingEnabled = loggingEnabled;\n    }\n\n    getHandler() {\n        return async (request: SinonFakeXMLHttpRequest) => {\n            // This is an internal property of SinonFakeXMLHttpRequest but we have to set it to 4 to\n            // suppress sinon's synchronous processing (which would result in HTTP 404). This allows us\n            // to handle the request asynchronously.\n            // See https://github.com/sinonjs/sinon/issues/637\n            // @ts-expect-error\n            request.readyState = 4;\n            const normalizedRequest = this.getNormalizedRequest(request);\n            const response = await this.server.handle(normalizedRequest);\n            this.respond(response, request);\n        };\n    }\n\n    getNormalizedRequest(request: SinonFakeXMLHttpRequest): NormalizedRequest {\n        const req: Request | SinonFakeXMLHttpRequest =\n            typeof request === 'string' ? new Request(request) : request;\n\n        const queryString = req.url\n            ? decodeURIComponent(req.url.slice(req.url.indexOf('?') + 1))\n            : '';\n        const params = parseQueryString(queryString);\n        let requestBody: Record<string, any> | undefined = undefined;\n        if ((req as SinonFakeXMLHttpRequest).requestBody) {\n            try {\n                requestBody = JSON.parse(\n                    (req as SinonFakeXMLHttpRequest).requestBody,\n                );\n            } catch (error) {\n                // body isn't JSON, skipping\n            }\n        }\n\n        return {\n            url: req.url,\n            headers: new Headers(request.requestHeaders),\n            params,\n            requestBody,\n            method: req.method,\n        };\n    }\n\n    respond(response: BaseResponse, request: SinonFakeXMLHttpRequest) {\n        const sinonResponse = {\n            status: response.status,\n            body: response.body ?? '',\n            headers: response.headers ?? {},\n        };\n\n        if (Array.isArray(sinonResponse.headers)) {\n            if (\n                !(\n                    sinonResponse.headers as Array<{\n                        name: string;\n                        value: string;\n                    }>\n                ).find((header) => header.name.toLowerCase() === 'content-type')\n            ) {\n                sinonResponse.headers.push({\n                    name: 'Content-Type',\n                    value: 'application/json',\n                });\n            }\n        } else if (\n            !(sinonResponse.headers as Record<string, unknown>)['Content-Type']\n        ) {\n            sinonResponse.headers['Content-Type'] = 'application/json';\n        }\n\n        // This is an internal property of SinonFakeXMLHttpRequest but we have to reset it to 1\n        // to handle the request asynchronously.\n        // See https://github.com/sinonjs/sinon/issues/637\n        // @ts-expect-error\n        request.readyState = 1;\n\n        request.respond(\n            sinonResponse.status,\n            sinonResponse.headers,\n            JSON.stringify(sinonResponse.body),\n        );\n\n        this.log(request, sinonResponse);\n    }\n\n    log(request: SinonFakeXMLHttpRequest, response: SinonFakeRestResponse) {\n        if (!this.loggingEnabled) return;\n        if (console.group) {\n            // Better logging in Chrome\n            console.groupCollapsed(request.method, request.url, '(FakeRest)');\n            console.group('request');\n            console.log(request.method, request.url);\n            console.log('headers', request.requestHeaders);\n            console.log('body   ', request.requestBody);\n            console.groupEnd();\n            console.group('response', response.status);\n            console.log('headers', response.headers);\n            console.log('body   ', response.body);\n            console.groupEnd();\n            console.groupEnd();\n        } else {\n            console.log(\n                'FakeRest request ',\n                request.method,\n                request.url,\n                'headers',\n                request.requestHeaders,\n                'body',\n                request.requestBody,\n            );\n            console.log(\n                'FakeRest response',\n                response.status,\n                'headers',\n                response.headers,\n                'body',\n                response.body,\n            );\n        }\n    }\n\n    toggleLogging() {\n        this.loggingEnabled = !this.loggingEnabled;\n    }\n}\n\nexport const getSinonHandler = (options: SinonAdapterOptions) => {\n    const server = new SinonAdapter(options);\n    return server.getHandler();\n};\n\n/**\n * @deprecated Use SinonServer instead\n */\nexport const Server = SinonAdapter;\n\nexport type SinonFakeRestResponse = {\n    status: number;\n    body: any;\n    headers: Record<string, string>;\n};\n\nexport type SinonAdapterOptions = BaseServerOptions & {\n    server?: APIServer;\n    loggingEnabled?: boolean;\n};\n", "import { SimpleRestServer } from '../SimpleRestServer.ts';\nimport { parseQueryString } from '../parseQueryString.ts';\nimport type { BaseServerOptions } from '../SimpleRestServer.ts';\nimport type { BaseResponse, APIServer, NormalizedRequest } from '../types.ts';\nimport type { MockResponseObject } from 'fetch-mock';\n\nexport class FetchMockAdapter {\n    loggingEnabled = false;\n    server: APIServer;\n\n    constructor({\n        loggingEnabled = false,\n        server,\n        ...options\n    }: FetchMockAdapterOptions = {}) {\n        this.server = server || new SimpleRestServer(options);\n        this.loggingEnabled = loggingEnabled;\n    }\n\n    getHandler() {\n        const handler = async (url: string, options: RequestInit) => {\n            const request = new Request(url, options);\n            const normalizedRequest = await this.getNormalizedRequest(request);\n            const response = await this.server.handle(normalizedRequest);\n            this.log(request, response, normalizedRequest);\n            return response as MockResponseObject;\n        };\n\n        return handler;\n    }\n\n    async getNormalizedRequest(request: Request): Promise<NormalizedRequest> {\n        const req =\n            typeof request === 'string' ? new Request(request) : request;\n        const queryString = req.url\n            ? decodeURIComponent(req.url.slice(req.url.indexOf('?') + 1))\n            : '';\n        const params = parseQueryString(queryString);\n        const text = await req.text();\n        let requestBody: Record<string, any> | undefined = undefined;\n        try {\n            requestBody = JSON.parse(text);\n        } catch (e) {\n            // not JSON, no big deal\n        }\n\n        return {\n            url: req.url,\n            headers: req.headers,\n            params,\n            requestBody,\n            method: req.method,\n        };\n    }\n\n    log(\n        request: FetchMockFakeRestRequest,\n        response: BaseResponse,\n        normalizedRequest: NormalizedRequest,\n    ) {\n        if (!this.loggingEnabled) return;\n        if (console.group) {\n            // Better logging in Chrome\n            console.groupCollapsed(\n                normalizedRequest.method,\n                normalizedRequest.url,\n                '(FakeRest)',\n            );\n            console.group('request');\n            console.log(normalizedRequest.method, normalizedRequest.url);\n            console.log('headers', request.headers);\n            console.log('body   ', request.requestJson);\n            console.groupEnd();\n            console.group('response', response.status);\n            console.log('headers', response.headers);\n            console.log('body   ', response.body);\n            console.groupEnd();\n            console.groupEnd();\n        } else {\n            console.log(\n                'FakeRest request ',\n                normalizedRequest.method,\n                normalizedRequest.url,\n                'headers',\n                request.headers,\n                'body',\n                request.requestJson,\n            );\n            console.log(\n                'FakeRest response',\n                response.status,\n                'headers',\n                response.headers,\n                'body',\n                response.body,\n            );\n        }\n    }\n\n    toggleLogging() {\n        this.loggingEnabled = !this.loggingEnabled;\n    }\n}\n\nexport const getFetchMockHandler = (options: FetchMockAdapterOptions) => {\n    const server = new FetchMockAdapter(options);\n    return server.getHandler();\n};\n\n/**\n * @deprecated Use FetchServer instead\n */\nexport const FetchServer = FetchMockAdapter;\n\nexport type FetchMockFakeRestRequest = Partial<Request> & {\n    requestBody?: string;\n    responseText?: string;\n    requestJson?: Record<string, any>;\n    queryString?: string;\n    params?: { [key: string]: any };\n};\n\nexport type FetchMockAdapterOptions = BaseServerOptions & {\n    server?: APIServer;\n    loggingEnabled?: boolean;\n};\n", "import { SimpleRestServer } from '../SimpleRestServer.ts';\nimport type { BaseServerOptions } from '../SimpleRestServer.ts';\nimport type { APIServer, NormalizedRequest } from '../types.ts';\n\nexport class MswAdapter {\n    server: APIServer;\n\n    constructor({ server, ...options }: MswAdapterOptions) {\n        this.server = server || new SimpleRestServer(options);\n    }\n\n    getHandler() {\n        return async ({ request }: { request: Request }) => {\n            const normalizedRequest = await this.getNormalizedRequest(request);\n            const response = await this.server.handle(normalizedRequest);\n            return new Response(JSON.stringify(response.body), {\n                status: response.status,\n                headers: response.headers,\n            });\n        };\n    }\n\n    async getNormalizedRequest(request: Request): Promise<NormalizedRequest> {\n        const url = new URL(request.url);\n        const params = Object.fromEntries(\n            Array.from(new URLSearchParams(url.search).entries()).map(\n                ([key, value]) => [key, JSON.parse(value)],\n            ),\n        );\n        let requestBody: Record<string, any> | undefined = undefined;\n        try {\n            const text = await request.text();\n            requestBody = JSON.parse(text);\n        } catch (e) {\n            // not JSON, no big deal\n        }\n\n        return {\n            url: request.url,\n            headers: request.headers,\n            params,\n            requestBody,\n            method: request.method,\n        };\n    }\n}\n\nexport const getMswHandler = (options: MswAdapterOptions) => {\n    const server = new MswAdapter(options);\n    return server.getHandler();\n};\n\nexport type MswAdapterOptions = BaseServerOptions & {\n    server?: APIServer;\n};\n", "import type { Middleware } from './SimpleRestServer.ts';\n\nexport const withDelay =\n    (delayMs: number): Middleware =>\n    (context, next) => {\n        return new Promise((resolve) => {\n            setTimeout(() => {\n                resolve(next(context));\n            }, delayMs);\n        });\n    };\n", "import { Database } from 'fakerest';\nimport { DataProvider } from 'ra-core';\n\n/* eslint-disable no-console */\nfunction log(type, resource, params, response) {\n    // @ts-ignore\n    if (console.group) {\n        // Better logging in Chrome\n        console.groupCollapsed(type, resource, JSON.stringify(params));\n        console.log(response);\n        console.groupEnd();\n    } else {\n        console.log('FakeRest request ', type, resource, params);\n        console.log('FakeRest response', response);\n    }\n}\n\nfunction delayed(response: any, delay?: number) {\n    // If there is no delay, we return the value right away/\n    // This saves a tick in unit tests.\n    return delay\n        ? new Promise(resolve => {\n              setTimeout(() => resolve(response), delay);\n          })\n        : response;\n}\n\n/**\n * Respond to react-admin data queries using a local JavaScript object\n *\n * Useful for debugging and testing - do not use in production.\n *\n * @example\n *\n * import fakeDataProvider from 'ra-data-fakerest';\n * const dataProvider = fakeDataProvider({\n *   posts: [\n *     { id: 0, title: 'Hello, world!' },\n *     { id: 1, title: 'FooBar' },\n *   ],\n *   comments: [\n *     { id: 0, post_id: 0, author: 'John Doe', body: 'Sensational!' },\n *     { id: 1, post_id: 0, author: 'Jane Doe', body: 'I agree' },\n *   ],\n * })\n */\nexport default (data, loggingEnabled = false, delay?: number): DataProvider => {\n    const database = new Database({ data });\n    if (typeof window !== 'undefined') {\n        // give way to update data in the console\n        (window as any)._database = database;\n    }\n\n    function getResponse(type, resource, params) {\n        switch (type) {\n            case 'getList': {\n                const { page, perPage } = params.pagination;\n                const { field, order } = params.sort;\n                const query = {\n                    sort: [field, order] as [string, 'asc' | 'desc'],\n                    range: [(page - 1) * perPage, page * perPage - 1] as [\n                        number,\n                        number,\n                    ],\n                    filter: params.filter,\n                };\n                return delayed(\n                    {\n                        data: database.getAll(resource, query),\n                        total: database.getCount(resource, {\n                            filter: params.filter,\n                        }),\n                    },\n                    delay\n                );\n            }\n            case 'getOne':\n                return delayed(\n                    {\n                        data: database.getOne(resource, params.id, {\n                            ...params,\n                        }),\n                    },\n                    delay\n                );\n            case 'getMany':\n                return delayed(\n                    {\n                        data: params.ids.map(\n                            id => database.getOne(resource, id),\n                            { ...params }\n                        ),\n                    },\n                    delay\n                );\n            case 'getManyReference': {\n                const { page, perPage } = params.pagination;\n                const { field, order } = params.sort;\n                const query = {\n                    sort: [field, order] as [string, 'asc' | 'desc'],\n                    range: [(page - 1) * perPage, page * perPage - 1] as [\n                        number,\n                        number,\n                    ],\n                    filter: { ...params.filter, [params.target]: params.id },\n                };\n                return delayed(\n                    {\n                        data: database.getAll(resource, query),\n                        total: database.getCount(resource, {\n                            filter: query.filter,\n                        }),\n                    },\n                    delay\n                );\n            }\n            case 'update':\n                return delayed(\n                    {\n                        data: database.updateOne(resource, params.id, {\n                            ...params.data,\n                        }),\n                    },\n                    delay\n                );\n            case 'updateMany':\n                params.ids.forEach(id =>\n                    database.updateOne(resource, id, {\n                        ...params.data,\n                    })\n                );\n                return delayed({ data: params.ids }, delay);\n            case 'create':\n                return delayed(\n                    { data: database.addOne(resource, { ...params.data }) },\n                    delay\n                );\n            case 'delete':\n                return delayed(\n                    { data: database.removeOne(resource, params.id) },\n                    delay\n                );\n            case 'deleteMany':\n                params.ids.forEach(id => database.removeOne(resource, id));\n                return delayed({ data: params.ids }, delay);\n            default:\n                return false;\n        }\n    }\n\n    /**\n     * @param {String} type One of the data Provider methods, e.g. 'getList'\n     * @param {String} resource Name of the resource to fetch, e.g. 'posts'\n     * @param {Object} params The data request params, depending on the type\n     * @returns {Promise} The response\n     */\n    const handle = async (type, resource, params): Promise<any> => {\n        const collection = database.getCollection(resource);\n        if (!collection && type !== 'create') {\n            const error = new UndefinedResourceError(\n                `Undefined collection \"${resource}\"`\n            );\n            error.code = 1; // make that error detectable\n            throw error;\n        }\n        let response;\n        try {\n            response = await getResponse(type, resource, params);\n        } catch (error) {\n            console.error(error);\n            throw error;\n        }\n        if (loggingEnabled) {\n            const { signal, ...paramsWithoutSignal } = params;\n            log(type, resource, paramsWithoutSignal, response);\n        }\n        return response;\n    };\n\n    return {\n        getList: (resource, params) => handle('getList', resource, params),\n        getOne: (resource, params) => handle('getOne', resource, params),\n        getMany: (resource, params) => handle('getMany', resource, params),\n        getManyReference: (resource, params) =>\n            handle('getManyReference', resource, params),\n        update: (resource, params) => handle('update', resource, params),\n        updateMany: (resource, params) =>\n            handle('updateMany', resource, params),\n        create: (resource, params) => handle('create', resource, params),\n        delete: (resource, params) => handle('delete', resource, params),\n        deleteMany: (resource, params) =>\n            handle('deleteMany', resource, params),\n    };\n};\n\nclass UndefinedResourceError extends Error {\n    code: number;\n}\n"],
  "mappings": "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AU1W,GAAO;AACxB,SAAOc,GAAad,CAAK,KAAK4U,GAAO5U,CAAK,KAAKyN;AACjD;AAEA,IAAAkJ,KAAiBD;AAAjB,ICjBIA,KAAYrX;ADiBhB,IChBIyP,KAAYtO;ADgBhB,ICfIyO,KAAWxO;ADef,ICZImW,KAAY3H,MAAYA,GAAS;ADYrC,ICOI4H,KAAQD,KAAY9H,GAAU8H,EAAS,IAAIF;ADP/C,ICSAI,KAAiBD;ADTjB,IEjBIjC,KAASvV;AFiBb,IEhBIyB,KAAeN;AFgBnB,IEbIqN,KAAS;AASb,SAASkJ,GAAU/W,GAAO;AACxB,SAAOc,GAAad,CAAK,KAAK4U,GAAO5U,CAAK,KAAK6N;AACjD;AAEA,IAAAmJ,KAAiBD;AAAjB,ICjBIA,KAAY1X;ADiBhB,IChBIyP,KAAYtO;ADgBhB,ICfIyO,KAAWxO;ADef,ICZIwW,KAAYhI,MAAYA,GAAS;ADYrC,ICOIiI,KAAQD,KAAYnI,GAAUmI,EAAS,IAAIF;ADP/C,ICSAI,KAAiBD;ADTjB,IEjBIxM,KAAQrL;AFiBZ,IEhBIuL,KAAYpK;AFgBhB,IEfI0K,KAAczK;AFelB,IEdIqQ,KAAalO;AFcjB,IEbI2O,KAAejN;AFanB,IEZIoN,KAAcjH;AFYlB,IEXIoH,KAAYwC;AFWhB,IEVI5B,KAAc2E;AFUlB,IETIjE,KAAgBkE;AFSpB,IERI5D,KAAa6D;AFQjB,IEPI3D,KAAe4D;AFOnB,IENI3C,KAAS4C;AFMb,IELIzC,KAAiB0C;AFKrB,IEJItB,KAAiBuB;AFIrB,IEHIlB,KAAkBmB;AFGtB,IEFI3Y,KAAU4Y;AFEd,IEDI9K,KAAW+K;AFCf,IEAIhB,KAAQiB;AFAZ,IECIrW,KAAWsW;AFDf,IEEIb,KAAQc;AFFZ,IEGIpH,KAAOqH;AFHX,IEII5G,KAAS6G;AFJb,IEOIC,KAAkB;AFPtB,IEQIC,KAAkB;AFRtB,IESIC,KAAqB;AFTzB,IEYItM,KAAU;AFZd,IEaIsB,KAAW;AFbf,IEcIC,KAAU;AFdd,IEeIC,KAAU;AFfd,IEgBIC,KAAW;AFhBf,IEiBI5L,KAAU;AFjBd,IEkBIC,KAAS;AFlBb,IEmBI4L,KAAS;AFnBb,IEoBIC,KA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",
  "names": ["isArray", "isArray_1", "freeGlobal", "global", "_freeGlobal", "require$$0", "freeSelf", "root", "_root", "Symbol", "_Symbol", "objectProto", "hasOwnProperty", "nativeObjectToString", "symToStringTag", "getRawTag", "value", "isOwn", "tag", "unmasked", "result", "_getRawTag", "objectToString", "_objectToString", "require$$1", "require$$2", "nullTag", "undefinedTag", "baseGetTag", "_baseGetTag", "isObjectLike", "isObjectLike_1", "symbolTag", "isSymbol", "isSymbol_1", "reIsDeepProp", "reIsPlainProp", "isKey", "object", "type", "_isKey", "isObject", "isObject_1", "asyncTag", "funcTag", "genTag", "proxyTag", "isFunction", "isFunction_1", "coreJsData", "_coreJsData", "maskSrcKey", "uid", "isMasked", "func", "_isMasked", "funcProto", "funcToString", "toSource", "_toSource", "require$$3", "reRegExpChar", "reIsHostCtor", "reIsNative", "baseIsNative", "pattern", "_baseIsNative", "getValue", "key", "_getValue", "getNative", "_getNative", "nativeCreate", "_nativeCreate", "hashClear", "_hashClear", "hashDelete", "_hashDelete", "HASH_UNDEFINED", "hashGet", "data", "_hashGet", "hashHas", "_hashHas", "hashSet", "_hashSet", "require$$4", "Hash", "entries", "index", "length", "entry", "_Hash", "listCacheClear", "_listCacheClear", "eq", "other", "eq_1", "assocIndexOf", "array", "_assocIndexOf", "arrayProto", "splice", "listCacheDelete", "lastIndex", "_listCacheDelete", "listCacheGet", "_listCacheGet", "listCacheHas", "_listCacheHas", "listCacheSet", "_listCacheSet", "ListCache", "_ListCache", "Map", "_Map", "mapCacheClear", "_mapCacheClear", "isKeyable", "_isKeyable", "getMapData", "map", "_getMapData", "mapCacheDelete", "_mapCacheDelete", "mapCacheGet", "_mapCacheGet", "mapCacheHas", "_mapCacheHas", "mapCacheSet", "size", "_mapCacheSet", "MapCache", "_MapCache", "FUNC_ERROR_TEXT", "memoize", "resolver", "memoized", "args", "cache", "memoize_1", "MAX_MEMOIZE_SIZE", "memoizeCapped", "_memoizeCapped", "rePropName", "reEscapeChar", "stringToPath", "string", "match", "number", "quote", "subString", "_stringToPath", "arrayMap", "iteratee", "_arrayMap", "INFINITY", "symbolProto", "symbolToString", "baseToString", "_baseToString", "toString", "toString_1", "castPath", "_castPath", "toKey", "_toKey", "baseGet", "path", "_baseGet", "get", "defaultValue", "get_1", "stackClear", "_stackClear", "stackDelete", "_stackDelete", "stackGet", "_stackGet", "stackHas", "_stackHas", "LARGE_ARRAY_SIZE", "stackSet", "pairs", "_stackSet", "require$$5", "Stack", "_Stack", "arrayEach", "_arrayEach", "defineProperty", "_defineProperty", "baseAssignValue", "_baseAssignValue", "assignValue", "objValue", "_assignValue", "copyObject", "source", "props", "customizer", "isNew", "newValue", "_copyObject", "baseTimes", "n", "_baseTimes", "argsTag", "baseIsArguments", "_baseIsArguments", "propertyIsEnumerable", "isArguments", "isArguments_1", "stubFalse", "stubFalse_1", "freeExports", "exports", "freeModule", "module", "moduleExports", "Buffer", "nativeIsBuffer", "isBuffer", "MAX_SAFE_INTEGER", "reIsUint", "isIndex", "_isIndex", "isLength", "isLength_1", "arrayTag", "boolTag", "dateTag", "errorTag", "mapTag", "numberTag", "objectTag", "regexpTag", "setTag", "stringTag", "weakMapTag", "arrayBufferTag", "dataViewTag", "float32Tag", "float64Tag", "int8Tag", "int16Tag", "int32Tag", "uint8Tag", "uint8ClampedTag", "uint16Tag", "uint32Tag", "typedArrayTags", "baseIsTypedArray", "_baseIsTypedArray", "baseUnary", "_baseUnary", "freeProcess", "nodeUtil", "types", "nodeIsTypedArray", "isTypedArray", "isTypedArray_1", "arrayLikeKeys", "inherited", "isArr", "isArg", "isBuff", "isType", "skipIndexes", "_arrayLikeKeys", "isPrototype", "Ctor", "proto", "_isPrototype", "overArg", "transform", "arg", "_overArg", "nativeKeys", "_nativeKeys", "baseKeys", "_baseKeys", "isArrayLike", "isArrayLike_1", "keys", "keys_1", "baseAssign", "_baseAssign", "nativeKeysIn", "_nativeKeysIn", "baseKeysIn", "isProto", "_baseKeysIn", "keysIn", "keysIn_1", "baseAssignIn", "_baseAssignIn", "allocUnsafe", "cloneBuffer", "buffer", "isDeep", "copyArray", "_copyArray", "arrayFilter", "predicate", "resIndex", "_arrayFilter", "stubArray", "stubArray_1", "nativeGetSymbols", "getSymbols", "symbol", "_getSymbols", "copySymbols", "_copySymbols", "arrayPush", "values", "offset", "_arrayPush", "getPrototype", "_getPrototype", "getSymbolsIn", "_getSymbolsIn", "copySymbolsIn", "_copySymbolsIn", "baseGetAllKeys", "keysFunc", "symbolsFunc", "_baseGetAllKeys", "getAllKeys", "_getAllKeys", "getAllKeysIn", "_getAllKeysIn", "DataView", "_DataView", "Promise", "_Promise", "Set", "_Set", "WeakMap", "_WeakMap", "require$$6", "promiseTag", "dataViewCtorString", "mapCtorString", "promiseCtorString", "setCtorString", "weakMapCtorString", "getTag", "ctorString", "_getTag", "initCloneArray", "_initCloneArray", "Uint8Array", "_Uint8Array", "cloneArrayBuffer", "arrayBuffer", "_cloneArrayBuffer", "cloneDataView", "dataView", "_cloneDataView", "reFlags", "cloneRegExp", "regexp", "_cloneRegExp", "symbolValueOf", "cloneSymbol", "_cloneSymbol", "cloneTypedArray", "typedArray", "_cloneTypedArray", "initCloneByTag", "_initCloneByTag", "objectCreate", "baseCreate", "_baseCreate", "initCloneObject", "_initCloneObject", "baseIsMap", "_baseIsMap", "nodeIsMap", "isMap", "isMap_1", "baseIsSet", "_baseIsSet", "nodeIsSet", "isSet", "isSet_1", "require$$7", "require$$8", "require$$9", "require$$10", "require$$11", "require$$12", "require$$13", "require$$14", "require$$15", "require$$16", "require$$17", "require$$18", "require$$19", "require$$20", "require$$21", "CLONE_DEEP_FLAG", "CLONE_FLAT_FLAG", "CLONE_SYMBOLS_FLAG", "cloneableTags", "baseClone", "bitmask", "stack", "isFlat", "isFull", "isFunc", "stacked", "subValue", "_baseClone", "setCacheAdd", "_setCacheAdd", "setCacheHas", "_setCacheHas", "SetCache", "_SetCache", "arraySome", "_arraySome", "cacheHas", "_cacheHas", "COMPARE_PARTIAL_FLAG", "COMPARE_UNORDERED_FLAG", "equalArrays", "equalFunc", "isPartial", "arrLength", "othLength", "arrStacked", "othStacked", "seen", "arrValue", "othValue", "compared", "othIndex", "_equalArrays", "mapToArray", "_mapToArray", "setToArray", "set", "_setToArray", "equalByTag", "convert", "_equalByTag", "equalObjects", "objProps", "objLength", "othProps", "objStacked", "skipCtor", "objCtor", "othCtor", "_equalObjects", "baseIsEqualDeep", "objIsArr", "othIsArr", "objTag", "othTag", "objIsObj", "othIsObj", "isSameTag", "objIsWrapped", "othIsWrapped", "objUnwrapped", "othUnwrapped", "_baseIsEqualDeep", "baseIsEqual", "_baseIsEqual", "baseIsMatch", "matchData", "noCustomizer", "srcValue", "_baseIsMatch", "isStrictComparable", "_isStrictComparable", "getMatchData", "_getMatchData", "matchesStrictComparable", "_matchesStrictComparable", "baseMatches", "_baseMatches", "matches", "matches_1", "Collection", "items", "identifierName", "getNewId", "__publicField", "database", "name", "resourceName", "referenceName", "item", "otherCollection", "pluralResourceName", "embed", "resourceEmbedders", "itemWithEmbeds", "embedder", "query", "filterItems", "sortItems", "rangeItems", "identifier", "every", "acc", "some", "getArrayOfObjectsPaths", "keyParts", "keyToArray", "keyToItem", "itemValue", "getSimpleFilter", "realKey", "regex", "finalValue", "val", "v", "filter", "filterFunctions", "buildRegexSearch", "filterWithQuery", "itemKey", "arrayOfObjectsPaths", "arrayPath", "valuePath", "selected", "filterFunction", "sort", "a", "b", "direction", "range", "input", "word", "Single", "obj", "i", "Database", "collection", "single", "params", "_c", "id", "_d", "_a", "UndefinedResourceError"]
}
